<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <title>Damian Walsh</title>
  <subtitle>Designer (Interaction/UX/UI) based in Manchester, UK</subtitle>
  <link href="https://damianwalsh.co.uk/feed.xml" rel="self" />
  <link href="https://damianwalsh.co.uk/" />
  <updated>2025-07-17T00:00:00Z</updated>
  <id>https://damianwalsh.co.uk/</id>
  <author>
    <name>Damian Walsh</name>
    <email>damianwalsh@me.com</email>
  </author>
  <entry>
    <title>Building a digital bookshelf with Eleventy</title>
    <link href="https://damianwalsh.co.uk/posts/building-a-digital-bookshelf-with-eleventy/" />
    <updated>2025-07-17T00:00:00Z</updated>
    <id>https://damianwalsh.co.uk/posts/building-a-digital-bookshelf-with-eleventy/</id>
    <content type="html">&lt;p&gt;Building on my experience creating a &lt;a href=&quot;https://damianwalsh.co.uk/posts/creating-connections-with-music-and-technology/&quot;&gt;digital music library with Eleventy and APIs&lt;/a&gt;, I wanted to apply similar principles and lessons learned to organise my book collection. Creating a digital bookshelf with a static site generator isn&#39;t particularly new or original. Many similar projects and write-ups already exist. This one simply documents my personal approach.&lt;/p&gt;&lt;h2 id=&quot;the-openlibrary-api&quot; tabindex=&quot;-1&quot;&gt;The OpenLibrary API&lt;/h2&gt;&lt;p&gt;Several providers offer programmatic access to retrieve information and help organise a personal book library. I selected &lt;a href=&quot;https://openlibrary.org/developers/api&quot;&gt;OpenLibrary&lt;/a&gt; because its ethos aligns with one of my overarching principles for this project: using services that strike a balance between public good and commercial interests. OpenLibrary offers a range of APIs, including the &lt;a href=&quot;https://openlibrary.org/dev/docs/api/mybooks&quot;&gt;My Books API&lt;/a&gt;, which could essentially be used as a CMS, and the &lt;a href=&quot;https://openlibrary.org/dev/docs/api/books&quot;&gt;Books API&lt;/a&gt;, which I use to retrieve information.&lt;/p&gt;&lt;h3 id=&quot;editions-vs-works&quot; tabindex=&quot;-1&quot;&gt;Editions vs Works&lt;/h3&gt;&lt;p&gt;OpenLibrary organises books in two main ways: Editions and Works. When you consider the book you&#39;re currently reading, you&#39;re most likely thinking about a specific Edition. Works, on the other hand, are collections of related Editions—including translations, previous versions, and various formats. Works contain general information about a book, while Editions include specific details like publisher and &lt;a href=&quot;https://en.wikipedia.org/wiki/ISBN&quot;&gt;International Standard Book Number (ISBN)&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Both Work and Edition pages on OpenLibrary can be accessed as JSON by simply changing the page URL. To illustrate the difference in data returned by the API, I&#39;ll use one of my favourite books as an example: &lt;a href=&quot;https://damianwalsh.co.uk/reading/works/the-secret-history-donna-tartt/&quot;&gt;The Secret History by Donna Tartt&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Edition:&lt;/strong&gt; &lt;a href=&quot;https://openlibrary.org/books/OL38246222M.json&quot;&gt;openlibrary.org/books/OL38246222M.json&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Work:&lt;/strong&gt; &lt;a href=&quot;https://openlibrary.org/works/OL4321141W.json&quot;&gt;openlibrary.org/works/OL4321141W.json&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Using the Work ID instead of the Edition ID can occasionally produce unexpected results—such as returning a description in a language other than English. Despite this, I prefer using the Work ID to retrieve information and linking to this record on OpenLibrary. This way, if a visitor to my website discovers a book they want to read, they can more easily find an edition that suits their needs—whether that&#39;s format (audiobook, ebook, print), language, or how they get hold of it. I appreciate that OpenLibrary provides links to find libraries where a book can be borrowed or shops selling used books. It&#39;s more inclusive—this benefit outweighs any potential drawbacks.&lt;/p&gt;&lt;h2 id=&quot;creating-a-library-catalogue&quot; tabindex=&quot;-1&quot;&gt;Creating a library catalogue&lt;/h2&gt;&lt;p&gt;Like my music collection, I organise my books using &lt;a href=&quot;https://en.wikipedia.org/wiki/Library_catalog&quot;&gt;principles traditionally used in libraries&lt;/a&gt; within a &lt;a href=&quot;https://www.11ty.dev/docs/data-global/&quot;&gt;Global Data File&lt;/a&gt;. Each entry acts as an index card, with the OpenLibrary ID functioning as its call number.&lt;/p&gt;&lt;pre class=&quot;language-json&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;&quot;title&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;The Secret History&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;&quot;author&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Donna Tartt&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;&quot;openlibrary_key&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;OL4321141W&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;&quot;date_read&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;2018-11-08&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;&quot;favourite&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;&quot;genres&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&quot;Fiction&quot;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;One drawback of using community-driven sources of information is that the responses from the API may not always match your own personal preferences. I wanted to organise my book collection using a familiar set of categories, so I add my own genres instead of using subjects returned by the OpenLibrary API. This highlights one of the key benefits of personal websites and the flexibility that tools like Eleventy provide to organise and arrange content in ways that match your own way of thinking.&lt;/p&gt;&lt;h2 id=&quot;enriching-book-data&quot; tabindex=&quot;-1&quot;&gt;Enriching book data&lt;/h2&gt;&lt;p&gt;To enrich raw data with additional details from OpenLibrary, I create a script that uses &lt;a href=&quot;https://www.11ty.dev/docs/plugins/fetch/&quot;&gt;Eleventy Fetch&lt;/a&gt; to handle API requests. The script processes each book in my collection, using the OpenLibrary ID to fetch additional details and create an enriched version used in my Collections.&lt;/p&gt;&lt;pre class=&quot;language-js&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;dotenv/config&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; EleventyFetch &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;@11ty/eleventy-fetch&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; promises &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; fs &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;fs&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;OPENLIBRARY_USER_AGENT&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; process&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;env&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;USER_AGENT&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;fetchOpenLibraryData&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;EleventyFetch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;url&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token literal-property property&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;1y&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token literal-property property&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;json&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token literal-property property&quot;&gt;fetchOptions&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token literal-property property&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token string-property property&quot;&gt;&quot;User-Agent&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;OPENLIBRARY_USER_AGENT&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token string-property property&quot;&gt;&quot;Accept&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;application/json&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;delay&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;ms&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;resolve&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; ms&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;fetchBookDetails&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;book&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;openlibrary_key&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;No OpenLibrary ID provided for book:&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; book&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;title&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; book&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; url &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;https://openlibrary.org/works/&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;book&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;openlibrary_key&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;.json&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; bookDetails &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;fetchOpenLibraryData&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;url&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;book&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token literal-property property&quot;&gt;first_publish_date&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; bookDetails&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;first_publish_date&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token literal-property property&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;typeof&lt;/span&gt; bookDetails&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;description &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;object&quot;&lt;/span&gt;
          &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; bookDetails&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;description&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;value &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&quot;&lt;/span&gt;
          &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; bookDetails&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;description &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;error&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;Error fetching details for &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;book&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;title&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; error&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; book&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;enrichReadingList&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; localData &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; fs&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;readFile&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;_data/reading.json&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;utf8&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; myBooks &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;localData&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; enrichedBooks &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; Promise&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;myBooks&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;fetchBookDetails&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; fs&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;writeFile&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;token string&quot;&gt;&quot;_data/enriched/reading.json&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token constant&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;stringify&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token literal-property property&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; enrichedBooks &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;Successfully enriched &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;enrichedBooks&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt; books.&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;error&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Error processing book list:&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; error&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;process&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;argv&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;endsWith&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;enrichReading.js&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;enrichReadingList&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; enrichReadingList &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;organising-books-with-collections&quot; tabindex=&quot;-1&quot;&gt;Organising books with Collections&lt;/h2&gt;&lt;p&gt;The &lt;a href=&quot;https://www.11ty.dev/docs/collections-api/&quot;&gt;Collections API&lt;/a&gt; can be used to access and organise data. I use it to arrange my enriched book data in several ways—sorting by author surname, genre, or reading date. For example, my genre collection configuration creates an array of genre objects, each containing the genre name and all books belonging to that genre. Books tagged with multiple genres appear across different genre groups. Any books without genres are assigned to an &amp;quot;Uncategorised&amp;quot; group.&lt;/p&gt;&lt;pre class=&quot;language-js&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;eleventyConfig&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addCollection&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;booksByGenre&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;collectionApi&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; enrichedReading &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;./_data/enriched/reading.json&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; books &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; enrichedReading&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;current&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; genres &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; booksByGenre &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    books&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;book&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;genres &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; book&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;genres&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        book&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;genres&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;genre&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;booksByGenre&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;genre&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            booksByGenre&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;genre&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
          &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
          booksByGenre&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;genre&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;book&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;booksByGenre&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Uncategorised&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
          booksByGenre&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Uncategorised&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
        booksByGenre&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Uncategorised&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;book&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    Object&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;booksByGenre&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;genre&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        genres&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;token literal-property property&quot;&gt;genre&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; genre&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;token literal-property property&quot;&gt;books&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; booksByGenre&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;genre&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; genres&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;creating-pages-from-data&quot; tabindex=&quot;-1&quot;&gt;Creating pages from data&lt;/h2&gt;&lt;p&gt;Taking genres as an example, individual pages for each Collection are automatically generated using &lt;a href=&quot;https://www.11ty.dev/docs/pagination/&quot;&gt;pagination&lt;/a&gt; to create multiple files from a single &lt;a href=&quot;https://mozilla.github.io/nunjucks/&quot;&gt;Nunjucks&lt;/a&gt; template. The following example shows the &lt;a href=&quot;https://yaml.org/&quot;&gt;YAML&lt;/a&gt; front matter that generates individual genre pages.&lt;/p&gt;&lt;pre class=&quot;language-yaml&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;token key atrule&quot;&gt;eleventyNavigation&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;reading-genre-{{ genreData.genre }}&quot;&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;{{ genreData.genre }}&quot;&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; reading&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;genres
&lt;span class=&quot;token key atrule&quot;&gt;eleventyComputed&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;{{ genreData.genre }} | Reading&quot;&lt;/span&gt;
&lt;span class=&quot;token key atrule&quot;&gt;pagination&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; collections.booksByGenre
  &lt;span class=&quot;token key atrule&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;alias&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; genreData
&lt;span class=&quot;token key atrule&quot;&gt;permalink&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;/reading/genres/{{ genreData.genre | slugify }}/&quot;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;---&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;managing-data-with-a-cli&quot; tabindex=&quot;-1&quot;&gt;Managing data with a CLI&lt;/h2&gt;&lt;p&gt;To simplify the process of adding and editing book data, I built a simple &lt;a href=&quot;https://github.com/damianwalsh/damianwalsh.github.io/blob/master/_scripts/readingCLI.js&quot;&gt;command-line tool&lt;/a&gt; using &lt;a href=&quot;https://www.npmjs.com/package/commander&quot;&gt;Commander&lt;/a&gt; and &lt;a href=&quot;https://www.npmjs.com/package/inquirer&quot;&gt;Inquirer&lt;/a&gt;, eliminating the need to manually edit JSON files or run separate scripts for tasks. The current CLI includes functions which take care of:&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Adding new books&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Add required details (title, author, OpenLibrary ID)&lt;/li&gt;&lt;li&gt;Record date read&lt;/li&gt;&lt;li&gt;Mark if the book is a favourite&lt;/li&gt;&lt;li&gt;Assign genres from a predefined list via a multi-select interface&lt;/li&gt;&lt;li&gt;Resize images using &lt;a href=&quot;https://imagemagick.org/&quot;&gt;ImageMagick&lt;/a&gt; and create filenames with &lt;a href=&quot;https://www.npmjs.com/package/@sindresorhus/slugify&quot;&gt;URL slugs&lt;/a&gt; that match those used in templates (e.g., &lt;code&gt;the-secret-history-donna-tartt.jpg&lt;/code&gt;)&lt;/li&gt;&lt;li&gt;Enrich with additional data from the OpenLibrary API&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Editing genres for existing books&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Select books from list sorted alphabetically by author and title&lt;/li&gt;&lt;li&gt;Add or remove genres using a multi-select interface&lt;/li&gt;&lt;li&gt;Update the raw and enriched data files&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The entire workflow is simplified to a single command—&lt;code&gt;npm run reading&lt;/code&gt; followed by interactive prompts.&lt;/p&gt;&lt;figure&gt;&lt;div class=&quot;screenshots&quot;&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/V_12eK_MfP-160.avif 160w, https://damianwalsh.co.uk/img/cache/V_12eK_MfP-320.avif 320w, https://damianwalsh.co.uk/img/cache/V_12eK_MfP-480.avif 480w, https://damianwalsh.co.uk/img/cache/V_12eK_MfP-640.avif 640w, https://damianwalsh.co.uk/img/cache/V_12eK_MfP-960.avif 960w, https://damianwalsh.co.uk/img/cache/V_12eK_MfP-1280.avif 1280w&quot; sizes=&quot;(min-width: 1700px) 680px, (min-width: 1380px) calc(64vw - 395px), (min-width: 780px) calc(62.07vw - 166px), 70.87vw&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/V_12eK_MfP-160.webp 160w, https://damianwalsh.co.uk/img/cache/V_12eK_MfP-320.webp 320w, https://damianwalsh.co.uk/img/cache/V_12eK_MfP-480.webp 480w, https://damianwalsh.co.uk/img/cache/V_12eK_MfP-640.webp 640w, https://damianwalsh.co.uk/img/cache/V_12eK_MfP-960.webp 960w, https://damianwalsh.co.uk/img/cache/V_12eK_MfP-1280.webp 1280w&quot; sizes=&quot;(min-width: 1700px) 680px, (min-width: 1380px) calc(64vw - 395px), (min-width: 780px) calc(62.07vw - 166px), 70.87vw&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://damianwalsh.co.uk/img/cache/V_12eK_MfP-160.png&quot; alt=&quot;A screenshot showing the terminal interface displaying available commands including options to add and edit books.&quot; width=&quot;1280&quot; height=&quot;742&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/V_12eK_MfP-160.png 160w, https://damianwalsh.co.uk/img/cache/V_12eK_MfP-320.png 320w, https://damianwalsh.co.uk/img/cache/V_12eK_MfP-480.png 480w, https://damianwalsh.co.uk/img/cache/V_12eK_MfP-640.png 640w, https://damianwalsh.co.uk/img/cache/V_12eK_MfP-960.png 960w, https://damianwalsh.co.uk/img/cache/V_12eK_MfP-1280.png 1280w&quot; sizes=&quot;(min-width: 1700px) 680px, (min-width: 1380px) calc(64vw - 395px), (min-width: 780px) calc(62.07vw - 166px), 70.87vw&quot;&gt;&lt;/picture&gt;&lt;/div&gt;&lt;figcaption class=&quot;meta&quot;&gt;Command-line interface for book collection&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2 id=&quot;digital-bookshelf&quot; tabindex=&quot;-1&quot;&gt;Digital bookshelf&lt;/h2&gt;&lt;p&gt;Now I can browse my website to find &lt;a href=&quot;https://damianwalsh.co.uk/reading/&quot;&gt;books I&#39;ve read&lt;/a&gt; in one place—rather than searching across various platforms or digging through stacks of printed books. I can sort my collection by &lt;a href=&quot;https://damianwalsh.co.uk/reading/authors/&quot;&gt;author&lt;/a&gt;, &lt;a href=&quot;https://damianwalsh.co.uk/reading/genres/&quot;&gt;genre&lt;/a&gt;, or &lt;a href=&quot;https://damianwalsh.co.uk/reading/years/&quot;&gt;year read&lt;/a&gt;, and easily identify my &lt;a href=&quot;https://damianwalsh.co.uk/reading/favourites/&quot;&gt;favourites&lt;/a&gt;.&lt;/p&gt;&lt;figure&gt;&lt;div class=&quot;screenshots no-pad&quot;&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/FCemy8Giqx-160.avif 160w, https://damianwalsh.co.uk/img/cache/FCemy8Giqx-320.avif 320w, https://damianwalsh.co.uk/img/cache/FCemy8Giqx-480.avif 480w, https://damianwalsh.co.uk/img/cache/FCemy8Giqx-640.avif 640w, https://damianwalsh.co.uk/img/cache/FCemy8Giqx-960.avif 960w, https://damianwalsh.co.uk/img/cache/FCemy8Giqx-1280.avif 1280w&quot; sizes=&quot;(min-width: 1700px) 680px, (min-width: 1380px) calc(64vw - 395px), (min-width: 780px) calc(62.07vw - 166px), 70.87vw&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/FCemy8Giqx-160.webp 160w, https://damianwalsh.co.uk/img/cache/FCemy8Giqx-320.webp 320w, https://damianwalsh.co.uk/img/cache/FCemy8Giqx-480.webp 480w, https://damianwalsh.co.uk/img/cache/FCemy8Giqx-640.webp 640w, https://damianwalsh.co.uk/img/cache/FCemy8Giqx-960.webp 960w, https://damianwalsh.co.uk/img/cache/FCemy8Giqx-1280.webp 1280w&quot; sizes=&quot;(min-width: 1700px) 680px, (min-width: 1380px) calc(64vw - 395px), (min-width: 780px) calc(62.07vw - 166px), 70.87vw&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://damianwalsh.co.uk/img/cache/FCemy8Giqx-160.png&quot; alt=&quot;A montage of screenshots showcasing the digital reading list optimised for small screens in a grid layout.&quot; width=&quot;1280&quot; height=&quot;900&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/FCemy8Giqx-160.png 160w, https://damianwalsh.co.uk/img/cache/FCemy8Giqx-320.png 320w, https://damianwalsh.co.uk/img/cache/FCemy8Giqx-480.png 480w, https://damianwalsh.co.uk/img/cache/FCemy8Giqx-640.png 640w, https://damianwalsh.co.uk/img/cache/FCemy8Giqx-960.png 960w, https://damianwalsh.co.uk/img/cache/FCemy8Giqx-1280.png 1280w&quot; sizes=&quot;(min-width: 1700px) 680px, (min-width: 1380px) calc(64vw - 395px), (min-width: 780px) calc(62.07vw - 166px), 70.87vw&quot;&gt;&lt;/picture&gt;&lt;/div&gt;&lt;figcaption class=&quot;meta&quot;&gt;Templates rendered by Eleventy&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2 id=&quot;retrospective&quot; tabindex=&quot;-1&quot;&gt;Retrospective&lt;/h2&gt;&lt;p&gt;As I discovered with my music collection project, having the courage to build something—anything—and publish it often triggers a wave of new ideas. The difference between the two projects is how quickly they came together. This underlined an important lesson for me after a fairly dispiriting period in my professional life: when you focus on building proficiency, speed follows; focusing on speed alone won&#39;t make you faster.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Creating connections with music and technology</title>
    <link href="https://damianwalsh.co.uk/posts/creating-connections-with-music-and-technology/" />
    <updated>2025-02-25T00:00:00Z</updated>
    <id>https://damianwalsh.co.uk/posts/creating-connections-with-music-and-technology/</id>
    <content type="html">&lt;p&gt;Back in December 2024, while I was doing the usual end-of-year contemplation, &lt;a href=&quot;https://newsroom.spotify.com/2024-wrapped/&quot;&gt;Spotify&#39;s annual Wrapped&lt;/a&gt; feature arrived, ringing a bell in my mind. I realised my scattershot listening habits on Spotify and the snapshot Wrapped presents failed to capture my changing tastes over time or evoke feelings and memories in the same way as a tangible music collection. Music is a fundamental part of my life—I&#39;ve always been a fan. My earliest memories are rooted in music, exploring my parents&#39; vinyl collection and watching &lt;a href=&quot;https://en.wikipedia.org/wiki/Top_of_the_Pops&quot;&gt;Top of the Pops&lt;/a&gt;, fascinated by the sounds and imagery. And later, making the rounds of record shops, building my collection, and plastering my teenage bedroom walls with band artwork, portraits, and memorabilia. In a funny sort of way, music was my gateway into design.&lt;/p&gt;&lt;figure&gt;&lt;div class=&quot;screenshots&quot;&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/DoKE1ZjDAO-160.avif 160w, https://damianwalsh.co.uk/img/cache/DoKE1ZjDAO-320.avif 320w, https://damianwalsh.co.uk/img/cache/DoKE1ZjDAO-480.avif 480w, https://damianwalsh.co.uk/img/cache/DoKE1ZjDAO-640.avif 640w, https://damianwalsh.co.uk/img/cache/DoKE1ZjDAO-960.avif 960w, https://damianwalsh.co.uk/img/cache/DoKE1ZjDAO-1280.avif 1280w&quot; sizes=&quot;(min-width: 1700px) 680px, (min-width: 1380px) calc(64vw - 395px), (min-width: 780px) calc(62.07vw - 166px), 70.87vw&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/DoKE1ZjDAO-160.webp 160w, https://damianwalsh.co.uk/img/cache/DoKE1ZjDAO-320.webp 320w, https://damianwalsh.co.uk/img/cache/DoKE1ZjDAO-480.webp 480w, https://damianwalsh.co.uk/img/cache/DoKE1ZjDAO-640.webp 640w, https://damianwalsh.co.uk/img/cache/DoKE1ZjDAO-960.webp 960w, https://damianwalsh.co.uk/img/cache/DoKE1ZjDAO-1280.webp 1280w&quot; sizes=&quot;(min-width: 1700px) 680px, (min-width: 1380px) calc(64vw - 395px), (min-width: 780px) calc(62.07vw - 166px), 70.87vw&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://damianwalsh.co.uk/img/cache/DoKE1ZjDAO-160.jpeg&quot; alt=&quot;An image from the music video; song lyrics relate to the article&#39;s theme.&quot; width=&quot;1280&quot; height=&quot;720&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/DoKE1ZjDAO-160.jpeg 160w, https://damianwalsh.co.uk/img/cache/DoKE1ZjDAO-320.jpeg 320w, https://damianwalsh.co.uk/img/cache/DoKE1ZjDAO-480.jpeg 480w, https://damianwalsh.co.uk/img/cache/DoKE1ZjDAO-640.jpeg 640w, https://damianwalsh.co.uk/img/cache/DoKE1ZjDAO-960.jpeg 960w, https://damianwalsh.co.uk/img/cache/DoKE1ZjDAO-1280.jpeg 1280w&quot; sizes=&quot;(min-width: 1700px) 680px, (min-width: 1380px) calc(64vw - 395px), (min-width: 780px) calc(62.07vw - 166px), 70.87vw&quot;&gt;&lt;/picture&gt;&lt;/div&gt;&lt;figcaption class=&quot;meta&quot;&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=bDMCwSP5nf0&quot;&gt;Always on My Mind&lt;/a&gt; by Pet Shop Boys&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;At the same time I was thinking about this, I was also feeling generally uninspired about the tech industry’s current direction and its impact on the world—especially compared to earlier visions of the internet. I want to direct my online thinking and doing toward something &lt;em&gt;I believe in.&lt;/em&gt; My music collection seemed to be one of the areas I could meaningfully apply technology to connect with something I&#39;m passionate about and learn something new in the process. I&#39;ve previously written about &lt;a href=&quot;https://damianwalsh.co.uk/posts/cultivating-a-digital-garden/&quot;&gt;cultivating a digital garden&lt;/a&gt; to achieve these aims. One of the concepts I came across while researching the idea was the &lt;a href=&quot;https://en.wikipedia.org/wiki/Memex&quot;&gt;Memex&lt;/a&gt;, proposed by &lt;a href=&quot;https://en.wikipedia.org/wiki/Vannevar_Bush&quot;&gt;Vannevar Bush&lt;/a&gt; in his 1945 article &lt;a href=&quot;https://archive.org/details/as-we-may-think&quot;&gt;As We May Think&lt;/a&gt;.&lt;/p&gt;&lt;figure&gt;&lt;div class=&quot;screenshots&quot;&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/va3amZzGRQ-160.avif 160w, https://damianwalsh.co.uk/img/cache/va3amZzGRQ-320.avif 320w, https://damianwalsh.co.uk/img/cache/va3amZzGRQ-480.avif 480w, https://damianwalsh.co.uk/img/cache/va3amZzGRQ-640.avif 640w, https://damianwalsh.co.uk/img/cache/va3amZzGRQ-960.avif 960w, https://damianwalsh.co.uk/img/cache/va3amZzGRQ-1280.avif 1280w&quot; sizes=&quot;(min-width: 1700px) 680px, (min-width: 1380px) calc(64vw - 395px), (min-width: 780px) calc(62.07vw - 166px), 70.87vw&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/va3amZzGRQ-160.webp 160w, https://damianwalsh.co.uk/img/cache/va3amZzGRQ-320.webp 320w, https://damianwalsh.co.uk/img/cache/va3amZzGRQ-480.webp 480w, https://damianwalsh.co.uk/img/cache/va3amZzGRQ-640.webp 640w, https://damianwalsh.co.uk/img/cache/va3amZzGRQ-960.webp 960w, https://damianwalsh.co.uk/img/cache/va3amZzGRQ-1280.webp 1280w&quot; sizes=&quot;(min-width: 1700px) 680px, (min-width: 1380px) calc(64vw - 395px), (min-width: 780px) calc(62.07vw - 166px), 70.87vw&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://damianwalsh.co.uk/img/cache/va3amZzGRQ-160.png&quot; alt=&quot;Illustration of a Memex device, showing a desk with built-in screens, microfilm readers, and a mechanical system for retrieving and linking information.&quot; width=&quot;1280&quot; height=&quot;1074&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/va3amZzGRQ-160.png 160w, https://damianwalsh.co.uk/img/cache/va3amZzGRQ-320.png 320w, https://damianwalsh.co.uk/img/cache/va3amZzGRQ-480.png 480w, https://damianwalsh.co.uk/img/cache/va3amZzGRQ-640.png 640w, https://damianwalsh.co.uk/img/cache/va3amZzGRQ-960.png 960w, https://damianwalsh.co.uk/img/cache/va3amZzGRQ-1280.png 1280w&quot; sizes=&quot;(min-width: 1700px) 680px, (min-width: 1380px) calc(64vw - 395px), (min-width: 780px) calc(62.07vw - 166px), 70.87vw&quot;&gt;&lt;/picture&gt;&lt;/div&gt;&lt;figcaption class=&quot;meta&quot;&gt;Theoretical Memex (memory index) device&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Bush envisioned a device that would act as a personal knowledge repository, capable of storing and organising books, records, and other information while automatically creating connections between them—essentially serving as a personalised library system. This concept seemed useful for applying to one of the challenges with physical media collections like &lt;a href=&quot;https://damianwalsh.co.uk/music/&quot;&gt;music&lt;/a&gt; and &lt;a href=&quot;https://damianwalsh.co.uk/reading/&quot;&gt;books&lt;/a&gt;: as collections grow larger, they become increasingly difficult to organise, navigate, and use to retrieve the ideas and emotions contained within them.&lt;/p&gt;&lt;h2 id=&quot;eleventy&quot; tabindex=&quot;-1&quot;&gt;Eleventy&lt;/h2&gt;&lt;p&gt;To turn this concept into a working application that would help me reconnect with my music collection, I turned to &lt;a href=&quot;https://www.11ty.dev/&quot;&gt;Eleventy&lt;/a&gt;, a static site generator. I had a basic working knowledge of Eleventy before developing the latest iteration of this website in January 2025—learning more was the motivating factor in choosing it. Fortunately, it turned out to be well-suited to this type of task and has an active, supportive community around it.&lt;/p&gt;&lt;p&gt;The rest of this document outlines my approach, decisions made along the way, challenges encountered and solutions found, including some code examples. Rather than a technical how-to guide, think of it as a living document of release notes tracking the progress and evolution of ideas.&lt;/p&gt;&lt;h2 id=&quot;version-1%3A-proof-of-concept&quot; tabindex=&quot;-1&quot;&gt;Version 1: Proof of concept&lt;/h2&gt;&lt;p&gt;&lt;time class=&quot;meta&quot; datetime=&quot;2025-01&quot;&gt;January 2025&lt;/time&gt;&lt;/p&gt;&lt;p&gt;So, in summary, here&#39;s where I stood at the outset: Spotify Wrapped galvanised me into action and Bush&#39;s Memex concept signposted the direction I wanted to move in.&lt;/p&gt;&lt;figure&gt;&lt;div class=&quot;screenshots&quot;&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/6bCOP_Nppj-160.avif 160w, https://damianwalsh.co.uk/img/cache/6bCOP_Nppj-320.avif 320w, https://damianwalsh.co.uk/img/cache/6bCOP_Nppj-480.avif 480w, https://damianwalsh.co.uk/img/cache/6bCOP_Nppj-640.avif 640w, https://damianwalsh.co.uk/img/cache/6bCOP_Nppj-960.avif 960w, https://damianwalsh.co.uk/img/cache/6bCOP_Nppj-1280.avif 1280w&quot; sizes=&quot;(min-width: 1700px) 680px, (min-width: 1380px) calc(64vw - 395px), (min-width: 780px) calc(62.07vw - 166px), 70.87vw&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/6bCOP_Nppj-160.webp 160w, https://damianwalsh.co.uk/img/cache/6bCOP_Nppj-320.webp 320w, https://damianwalsh.co.uk/img/cache/6bCOP_Nppj-480.webp 480w, https://damianwalsh.co.uk/img/cache/6bCOP_Nppj-640.webp 640w, https://damianwalsh.co.uk/img/cache/6bCOP_Nppj-960.webp 960w, https://damianwalsh.co.uk/img/cache/6bCOP_Nppj-1280.webp 1280w&quot; sizes=&quot;(min-width: 1700px) 680px, (min-width: 1380px) calc(64vw - 395px), (min-width: 780px) calc(62.07vw - 166px), 70.87vw&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://damianwalsh.co.uk/img/cache/6bCOP_Nppj-160.jpeg&quot; alt=&quot;A photograph of the authors CDs and vinyl records in storage boxes.&quot; width=&quot;1280&quot; height=&quot;960&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/6bCOP_Nppj-160.jpeg 160w, https://damianwalsh.co.uk/img/cache/6bCOP_Nppj-320.jpeg 320w, https://damianwalsh.co.uk/img/cache/6bCOP_Nppj-480.jpeg 480w, https://damianwalsh.co.uk/img/cache/6bCOP_Nppj-640.jpeg 640w, https://damianwalsh.co.uk/img/cache/6bCOP_Nppj-960.jpeg 960w, https://damianwalsh.co.uk/img/cache/6bCOP_Nppj-1280.jpeg 1280w&quot; sizes=&quot;(min-width: 1700px) 680px, (min-width: 1380px) calc(64vw - 395px), (min-width: 780px) calc(62.07vw - 166px), 70.87vw&quot;&gt;&lt;/picture&gt;&lt;/div&gt;&lt;figcaption class=&quot;meta&quot;&gt;My music collection&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;Things I know:&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;I have approximately 500 records—CDs from 1991–2015 and vinyl from 2017–present—that I want to organise meaningfully. I don&#39;t have purchase dates for most of the collection.&lt;/li&gt;&lt;li&gt;I want to build my own system, incorporating automation using tools and services that align with &lt;a href=&quot;https://damianwalsh.co.uk/colophon&quot;&gt;my values&lt;/a&gt;, learning something through the process.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Assumptions:&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;APIs can provide the data and be used to create the automated connections needed for a personalised library system.&lt;/li&gt;&lt;li&gt;I can master Eleventy sufficiently to make it serve my needs.&lt;/li&gt;&lt;/ul&gt;&lt;h3 id=&quot;library-classification&quot; tabindex=&quot;-1&quot;&gt;Library classification&lt;/h3&gt;&lt;p&gt;Libraries employ &lt;a href=&quot;https://en.wikipedia.org/wiki/Library_classification&quot;&gt;classification systems&lt;/a&gt; to organise materials on shelves and in catalogues and indexes. Each item gets a call number indicating its location within the system. In record shops, you encounter a &lt;a href=&quot;https://en.wikipedia.org/wiki/Faceted_classification&quot;&gt;faceted classification&lt;/a&gt; system that separates vinyl from CDs and organises records by genre (like Rock and Pop), then sorts them alphabetically by artist.&lt;/p&gt;&lt;figure&gt;&lt;div class=&quot;screenshots&quot;&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/uHeqztHcN0-160.avif 160w, https://damianwalsh.co.uk/img/cache/uHeqztHcN0-320.avif 320w, https://damianwalsh.co.uk/img/cache/uHeqztHcN0-480.avif 480w, https://damianwalsh.co.uk/img/cache/uHeqztHcN0-640.avif 640w, https://damianwalsh.co.uk/img/cache/uHeqztHcN0-960.avif 960w&quot; sizes=&quot;(min-width: 1700px) 329px, (min-width: 1380px) calc(32vw - 209px), (min-width: 780px) calc(30.69vw - 89px), 70.87vw&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/uHeqztHcN0-160.webp 160w, https://damianwalsh.co.uk/img/cache/uHeqztHcN0-320.webp 320w, https://damianwalsh.co.uk/img/cache/uHeqztHcN0-480.webp 480w, https://damianwalsh.co.uk/img/cache/uHeqztHcN0-640.webp 640w, https://damianwalsh.co.uk/img/cache/uHeqztHcN0-960.webp 960w&quot; sizes=&quot;(min-width: 1700px) 329px, (min-width: 1380px) calc(32vw - 209px), (min-width: 780px) calc(30.69vw - 89px), 70.87vw&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://damianwalsh.co.uk/img/cache/uHeqztHcN0-160.jpeg&quot; alt=&quot; A card catalogue in the University of Graz Library. Source: https://www.newworldencyclopedia.org/&quot; width=&quot;960&quot; height=&quot;640&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/uHeqztHcN0-160.jpeg 160w, https://damianwalsh.co.uk/img/cache/uHeqztHcN0-320.jpeg 320w, https://damianwalsh.co.uk/img/cache/uHeqztHcN0-480.jpeg 480w, https://damianwalsh.co.uk/img/cache/uHeqztHcN0-640.jpeg 640w, https://damianwalsh.co.uk/img/cache/uHeqztHcN0-960.jpeg 960w&quot; sizes=&quot;(min-width: 1700px) 329px, (min-width: 1380px) calc(32vw - 209px), (min-width: 780px) calc(30.69vw - 89px), 70.87vw&quot;&gt;&lt;/picture&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/qOB7z0r5uB-160.avif 160w, https://damianwalsh.co.uk/img/cache/qOB7z0r5uB-320.avif 320w, https://damianwalsh.co.uk/img/cache/qOB7z0r5uB-480.avif 480w, https://damianwalsh.co.uk/img/cache/qOB7z0r5uB-640.avif 640w, https://damianwalsh.co.uk/img/cache/qOB7z0r5uB-960.avif 960w&quot; sizes=&quot;(min-width: 1700px) 329px, (min-width: 1380px) calc(32vw - 209px), (min-width: 780px) calc(30.69vw - 89px), 70.87vw&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/qOB7z0r5uB-160.webp 160w, https://damianwalsh.co.uk/img/cache/qOB7z0r5uB-320.webp 320w, https://damianwalsh.co.uk/img/cache/qOB7z0r5uB-480.webp 480w, https://damianwalsh.co.uk/img/cache/qOB7z0r5uB-640.webp 640w, https://damianwalsh.co.uk/img/cache/qOB7z0r5uB-960.webp 960w&quot; sizes=&quot;(min-width: 1700px) 329px, (min-width: 1380px) calc(32vw - 209px), (min-width: 780px) calc(30.69vw - 89px), 70.87vw&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://damianwalsh.co.uk/img/cache/qOB7z0r5uB-160.jpeg&quot; alt=&quot; Vinyl records, CDs, and cassette tapes displayed in a record shop. Source: https://unsplash.com/&quot; width=&quot;960&quot; height=&quot;640&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/qOB7z0r5uB-160.jpeg 160w, https://damianwalsh.co.uk/img/cache/qOB7z0r5uB-320.jpeg 320w, https://damianwalsh.co.uk/img/cache/qOB7z0r5uB-480.jpeg 480w, https://damianwalsh.co.uk/img/cache/qOB7z0r5uB-640.jpeg 640w, https://damianwalsh.co.uk/img/cache/qOB7z0r5uB-960.jpeg 960w&quot; sizes=&quot;(min-width: 1700px) 329px, (min-width: 1380px) calc(32vw - 209px), (min-width: 780px) calc(30.69vw - 89px), 70.87vw&quot;&gt;&lt;/picture&gt;&lt;/div&gt;&lt;figcaption class=&quot;meta&quot;&gt;Library classification systems&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;The record industry uses its own system of identifiers called ISRC (International Standard Recording Code), but these aren&#39;t readily accessible. Instead, barcodes and label catalogue numbers printed on sleeves and discs—which identify specific versions of releases—can be used to connect physical collections with APIs and create a digital library organised similarly to record shops.&lt;/p&gt;&lt;h3 id=&quot;api-comparison&quot; tabindex=&quot;-1&quot;&gt;API comparison&lt;/h3&gt;&lt;p&gt;There are a range of APIs that provide metadata to help organise and catalogue a library of music releases. The question is which one to choose. I picked several and tried to compare the relative benefits of each:&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;&lt;/th&gt;&lt;th&gt;&lt;a href=&quot;https://www.discogs.com/developers&quot;&gt;Discogs&lt;/a&gt;&lt;/th&gt;&lt;th&gt;&lt;a href=&quot;https://musicbrainz.org/doc/MusicBrainz_API&quot;&gt;MusicBrainz&lt;/a&gt;&lt;/th&gt;&lt;th&gt;&lt;a href=&quot;https://developer.spotify.com/documentation/web-api&quot;&gt;Spotify&lt;/a&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Physical media focus&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;Excellent&lt;/td&gt;&lt;td&gt;Good&lt;/td&gt;&lt;td&gt;Limited&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Data completeness&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;Extensive physical release data, high accuracy for vinyl/CD&lt;/td&gt;&lt;td&gt;High for basic metadata, community-maintained&lt;/td&gt;&lt;td&gt;Comprehensive for streaming content, limited physical media data&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;API rate limits&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;60 requests/minute authenticated&lt;/td&gt;&lt;td&gt;1 request/sec for anonymous, 4/sec authenticated&lt;/td&gt;&lt;td&gt;Several tiers based on API quota&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Community contribution&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;Moderated submissions&lt;/td&gt;&lt;td&gt;Open editing&lt;/td&gt;&lt;td&gt;Closed system&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Cost&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;Free for non-commercial use&lt;/td&gt;&lt;td&gt;Free, open source&lt;/td&gt;&lt;td&gt;Free tier available&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;Discogs appears to best fit my needs and aligns with one of my overarching principles for this project: using services that strike a balance between public good and commercial interests.&lt;/p&gt;&lt;h3 id=&quot;selecting-metadata&quot; tabindex=&quot;-1&quot;&gt;Selecting metadata&lt;/h3&gt;&lt;p&gt;Taking one of my favourite records as an example: Brian Eno&#39;s &lt;a href=&quot;https://damianwalsh.co.uk/music/releases/another-green-world-brian-eno-vinyl&quot;&gt;Another Green World&lt;/a&gt;. Using the barcode printed on the sleeve (0602557703887), I can search &lt;a href=&quot;https://www.discogs.com/&quot;&gt;Discogs&lt;/a&gt; and see the resulting &lt;a href=&quot;https://www.discogs.com/release/11176407-Eno-Another-Green-World&quot;&gt;URL&lt;/a&gt; reveals its release ID (11176407). With this ID, I can fetch information about this specific release at the command line:&lt;/p&gt;&lt;pre class=&quot;language-bash&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;curl&lt;/span&gt; https://api.discogs.com/releases/11176407 --user-agent &lt;span class=&quot;token string&quot;&gt;&quot;FooBarApp/3.0&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The API returns a wealth of information in JSON format. From this data, I can cherry-pick the essential key/value pairs to display and organise releases in my collection according to format, genre, release year, and artist. Here&#39;s a simplified version of the response showing these fields:&lt;/p&gt;&lt;pre class=&quot;language-json&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;year&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2017&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;uri&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;https://www.discogs.com/release/11176407-Eno-Another-Green-World&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;formats&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Vinyl&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;&quot;descriptions&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
                &lt;span class=&quot;token string&quot;&gt;&quot;LP&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;token string&quot;&gt;&quot;Album&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;token string&quot;&gt;&quot;Reissue&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;token string&quot;&gt;&quot;Remastered&quot;&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;180 gram&quot;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;videos&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;&quot;uri&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;https://www.youtube.com/watch?v=bNwhtnaoVZU&quot;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;genres&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;token string&quot;&gt;&quot;Electronic&quot;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;tracklist&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;&quot;position&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;A1&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;&quot;title&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Sky Saw&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;&quot;duration&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;3:25&quot;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;release-dates&quot; tabindex=&quot;-1&quot;&gt;Release dates&lt;/h3&gt;&lt;p&gt;Release dates are a bit of a minefield. While they reliably follow the &lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_8601&quot;&gt;ISO 8601&lt;/a&gt; format (YYYY-MM-DD), entries can contain partial dates (YYYY or YYYY-MM), and release dates vary between regions like the US and UK. Since my vinyl collection consists mainly of reissues, the dates returned by the API reflect when the reissue was published rather than original release dates. Some degree of imprecision doesn&#39;t bother me—this isn&#39;t meant to be an encyclopedia. What matters most is having at least the &lt;em&gt;original&lt;/em&gt; release year—it allows me to access personal memories by consulting my library and playing records from specific years.&lt;/p&gt;&lt;h3 id=&quot;global-data-files&quot; tabindex=&quot;-1&quot;&gt;Global Data Files&lt;/h3&gt;&lt;p&gt;Before the internet, online databases, and standardised cataloguing protocols, libraries relied on a physical &lt;a href=&quot;https://en.wikipedia.org/wiki/Library_catalog&quot;&gt;library catalogue&lt;/a&gt; system. This used &lt;a href=&quot;https://en.wikipedia.org/wiki/Index_card&quot;&gt;index cards&lt;/a&gt; to record key details about each item, making it easy to find and retrieve materials. Following this principle, I use a &lt;a href=&quot;https://www.11ty.dev/docs/data-global/&quot;&gt;Global Data File&lt;/a&gt; to organise my collection—each entry functions like an index card, with the release ID serving as its call number.&lt;/p&gt;&lt;pre class=&quot;language-js&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token string-property property&quot;&gt;&quot;artist&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Brian Eno&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token string-property property&quot;&gt;&quot;title&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Another Green World&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token string-property property&quot;&gt;&quot;format&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Vinyl&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token string-property property&quot;&gt;&quot;release_id&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;11176407&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token string-property property&quot;&gt;&quot;first_released&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;1975-11-14&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token string-property property&quot;&gt;&quot;favourite&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In a separate Global Data File, I configure the &lt;a href=&quot;https://www.11ty.dev/docs/plugins/fetch/&quot;&gt;Fetch plugin&lt;/a&gt; to manage data requests. The plugin caches data locally to avoid bombarding the API with requests for assets including JSON, HTML, images, videos, etc. Walking through the code, here&#39;s how I fetch data from the Discogs API:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Import Node packages to manage environment variables, handle API requests, and perform asynchronous file operations&lt;/li&gt;&lt;li&gt;Set up Discogs API token and user agent from environment variables for authentication&lt;/li&gt;&lt;/ul&gt;&lt;pre class=&quot;language-js&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;dotenv/config&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; EleventyFetch &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;@11ty/eleventy-fetch&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; promises &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; fs &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;fs&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;DISCOGS_TOKEN&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; process&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;env&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;DISCOGS_TOKEN&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;DISCOGS_USER_AGENT&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; process&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;env&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;USER_AGENT&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Firstly, add a 1-second delay between API calls to respect Discogs&#39; rate limits, and cache responses locally for 24 hours.&lt;/p&gt;&lt;pre class=&quot;language-js&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;delay&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token parameter&quot;&gt;ms&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;resolve&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;resolve&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; ms&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;fetchWithRateLimit&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;EleventyFetch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;url&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token literal-property property&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;1d&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token literal-property property&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;json&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token literal-property property&quot;&gt;fetchOptions&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token literal-property property&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token string-property property&quot;&gt;&#39;Authorization&#39;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;Discogs token=&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;DISCOGS_TOKEN&lt;/span&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token string-property property&quot;&gt;&#39;User-Agent&#39;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;DISCOGS_USER_AGENT&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Next, read the library catalogue, which contains index cards with details about each item.&lt;/p&gt;&lt;pre class=&quot;language-js&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; localData &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; fs&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;readFile&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;_data/musicCollection.json&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;utf8&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; myCollection &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;localData&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; releases &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; Promise&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;myCollection&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;fetchReleaseDetails&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; releases &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;error&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Error processing music collection:&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; error&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token literal-property property&quot;&gt;releases&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Finally, details are fetched from the Discogs API using the release IDs, transforming everything into a consistent format that can be used in collections and templates.&lt;/p&gt;&lt;pre class=&quot;language-js&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;fetchReleaseDetails&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;release&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;release&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;release_id&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;No Discogs ID provided for release:&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; release&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;title&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; release&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; releaseUrl &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;https://api.discogs.com/releases/&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;release&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;release_id&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; releaseDetails &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;fetchWithRateLimit&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;releaseUrl&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; uniqueFormats &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;release&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token literal-property property&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; releaseDetails&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;year&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token literal-property property&quot;&gt;notes&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; releaseDetails&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;notes&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token literal-property property&quot;&gt;released&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; releaseDetails&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;released&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token literal-property property&quot;&gt;genres&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; releaseDetails&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;genres &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token literal-property property&quot;&gt;uri&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; releaseDetails&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;uri&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token literal-property property&quot;&gt;videos&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; releaseDetails&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;videos&lt;span class=&quot;token operator&quot;&gt;?.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;video&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token literal-property property&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; video&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;uri&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token literal-property property&quot;&gt;formats&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;releaseDetails&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;formats &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;reduce&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;acc&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; format&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;uniqueFormats&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;has&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;format&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
          uniqueFormats&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;format&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
          acc&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token literal-property property&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; format&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;token literal-property property&quot;&gt;descriptions&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; format&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;descriptions
          &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; acc&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token literal-property property&quot;&gt;tracklist&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;releaseDetails&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;tracklist &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;track&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token literal-property property&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; track&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;position&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token literal-property property&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; track&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;title&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token literal-property property&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; track&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;duration
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;error&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;Error fetching details for &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;release&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;title&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; error&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; release&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;collections&quot; tabindex=&quot;-1&quot;&gt;Collections&lt;/h3&gt;&lt;p&gt;The &lt;a href=&quot;https://www.11ty.dev/docs/collections-api/&quot;&gt;Collections API&lt;/a&gt; can be used to access and organise data. I use this feature to organise my music library in a variety of ways: grouping releases by artist, sorting by genre and format, organising by release year and creating related content connections. Collections are powerful because they let you transform and arrange content in ways that suit your specific needs.&lt;/p&gt;&lt;p&gt;For example, this collection organises music releases by year, handling various date formats and categorising releases by year. The &lt;code&gt;parseDate&lt;/code&gt; function handles three date formats: year only (YYYY), year and month (YYYY-MM), and complete date (YYYY-MM-DD). When dates are incomplete, it defaults to the first day of the month or year.&lt;/p&gt;&lt;pre class=&quot;language-js&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;parseDate&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;dateStr&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;dateStr&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; parts &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; dateStr&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;-&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token comment&quot;&gt;// If only year is provided&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;parts&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;parts&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token comment&quot;&gt;// If year and month are provided&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;parts&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;parts&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; parts&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token comment&quot;&gt;// If complete date is provided&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;parts&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; parts&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; parts&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The &lt;code&gt;releaseYears&lt;/code&gt; collection performs several tasks: it extracts years from the music data, prioritising first released date, removes duplicates, sorts chronologically, and groups releases by year.&lt;/p&gt;&lt;pre class=&quot;language-js&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;eleventyConfig&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addCollection&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;releaseYears&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;collectionApi&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; musicData &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; collectionApi&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getAll&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;?.&lt;/span&gt;data&lt;span class=&quot;token operator&quot;&gt;?.&lt;/span&gt;music&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;musicData &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;musicData&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;releases&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;warn&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Music data not found or invalid&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; years &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;musicData&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;releases
    &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;release&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token comment&quot;&gt;// Prefer first_released if available, otherwise use released&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; date &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;parseDate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;release&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;first_released&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;parseDate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;release&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;released&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; date &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; date&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getFullYear&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; year &lt;span class=&quot;token operator&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;a&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; b&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; a &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; b&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; years&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    year&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token literal-property property&quot;&gt;releases&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; musicData&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;releases&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token comment&quot;&gt;// Prefer first_released if available, otherwise use released&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; date &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;parseDate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;r&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;first_released&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;parseDate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;r&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;released&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; date &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; date&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getFullYear&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; year&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;filters&quot; tabindex=&quot;-1&quot;&gt;Filters&lt;/h3&gt;&lt;p&gt;Eleventy provides built-in &lt;a href=&quot;https://www.11ty.dev/docs/filters/&quot;&gt;Filters&lt;/a&gt; to transform data within templates, you can also create custom filters. Here&#39;s a simple filter with a modest task—extracting just the year from a date string. I use it to create links to relevant year pages from within individual release pages.&lt;/p&gt;&lt;pre class=&quot;language-js&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;eleventyConfig&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addFilter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;extractYear&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;dateString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;dateString&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; parts &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; dateString&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;-&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; parts&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;creating-pages-from-data&quot; tabindex=&quot;-1&quot;&gt;Creating pages from data&lt;/h3&gt;&lt;p&gt;Individual pages for artists, formats, genres, years, and releases are automatically generated using &lt;a href=&quot;https://www.11ty.dev/docs/pagination/&quot;&gt;pagination&lt;/a&gt; to create multiple files from a single &lt;a href=&quot;https://mozilla.github.io/nunjucks/&quot;&gt;Nunjucks&lt;/a&gt; template. The following example shows the &lt;a href=&quot;https://yaml.org/&quot;&gt;YAML&lt;/a&gt; front matter that generates individual release pages for each entry in my library.&lt;/p&gt;&lt;pre class=&quot;language-yaml&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;token key atrule&quot;&gt;eleventyNavigation&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;{{ release.title }}&quot;&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Releases
&lt;span class=&quot;token key atrule&quot;&gt;eleventyComputed&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;{{ release.title }} - {{ release.artist }} | Music Collection&quot;&lt;/span&gt;
&lt;span class=&quot;token key atrule&quot;&gt;pagination&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; collections.releases
  &lt;span class=&quot;token key atrule&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;alias&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; release
&lt;span class=&quot;token key atrule&quot;&gt;permalink&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;/music/releases/{{ release.title | slugify }}-{{ release.artist | slugify }}-{{ release.format | slugify }}.html&quot;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;---&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;p&gt;And from within the template itself, filters are applied to collection data to format dates and generate links to relevant artist, year, format, and genre index pages.&lt;/p&gt;&lt;pre class=&quot;language-html&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;dl&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;detail__meta&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;dt&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Artist&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;dt&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;dd&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;/music/artists/{{ release.artist | slugify }}.html&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;{{ release.artist }}&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;dd&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  {% if release.released or release.first_released %}
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;dt&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Release date&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;dt&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;dd&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  {% if release.released %}
  {% if release.first_released and release.first_released !== release.released %}
  {{ release.released | readableDate }} (first released: &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;/music/years/{{ release.first_released | extractYear }}.html&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;{{ release.first_released | readableDate }}&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;)
  {% else %}
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;/music/years/{{ release.released | extractYear }}.html&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;{{ release.released | readableDate }}&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  {% endif %}
  {% else %}
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;/music/years/{{ release.first_released | extractYear }}.html&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;{{ release.first_released | readableDate }}&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  {% endif %}
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;dd&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  {% endif %}
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;dt&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Format&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;dt&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;dd&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;/music/formats/{{ release.format | slugify }}.html&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;{{ release.format }}&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
    {% for format in release.formats %}
    {% if format.name == release.format %}
    ({{ format.descriptions | join(&quot;, &quot;) }})
    {% endif %}
    {% endfor %}
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;dd&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  {% if release.genres %}
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;dt&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Genres&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;dt&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;dd&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;{% for genre in release.genres %}
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;/music/genres/{{ genre | slugify }}.html&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;{{ genre }}&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;{% if not loop.last %}, {% endif %}
    {% endfor %}
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;dd&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  {% endif %}
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;dl&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;images&quot; tabindex=&quot;-1&quot;&gt;Images&lt;/h3&gt;&lt;p&gt;Image quality from community-driven APIs like Discogs varies. What constitutes acceptable is subjective and personal. For me, the artwork is as intimately linked to my thoughts and feelings as the music itself. Using Another Green World as an example—you can see the primary image provided by the API displayed alongside the one I chose for my library. I&#39;ve downloaded and hosted the API&#39;s image locally rather than hotlinking to it, since their version could change.&lt;/p&gt;&lt;figure&gt;&lt;div class=&quot;screenshots&quot;&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/DG1HyFC5Rf-160.avif 160w, https://damianwalsh.co.uk/img/cache/DG1HyFC5Rf-320.avif 320w, https://damianwalsh.co.uk/img/cache/DG1HyFC5Rf-480.avif 480w&quot; sizes=&quot;(min-width: 1700px) 329px, (min-width: 1380px) calc(32vw - 209px), (min-width: 780px) calc(30.69vw - 89px), (min-width: 740px) 480px, 65.71vw&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/DG1HyFC5Rf-160.webp 160w, https://damianwalsh.co.uk/img/cache/DG1HyFC5Rf-320.webp 320w, https://damianwalsh.co.uk/img/cache/DG1HyFC5Rf-480.webp 480w&quot; sizes=&quot;(min-width: 1700px) 329px, (min-width: 1380px) calc(32vw - 209px), (min-width: 780px) calc(30.69vw - 89px), (min-width: 740px) 480px, 65.71vw&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://damianwalsh.co.uk/img/cache/DG1HyFC5Rf-160.jpeg&quot; alt=&quot;Cover image of Brian Eno&#39;s Another Green World album provided by the Discogs API, showing quality issues including a visible sticker and distracting reflection.&quot; width=&quot;480&quot; height=&quot;480&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/DG1HyFC5Rf-160.jpeg 160w, https://damianwalsh.co.uk/img/cache/DG1HyFC5Rf-320.jpeg 320w, https://damianwalsh.co.uk/img/cache/DG1HyFC5Rf-480.jpeg 480w&quot; sizes=&quot;(min-width: 1700px) 329px, (min-width: 1380px) calc(32vw - 209px), (min-width: 780px) calc(30.69vw - 89px), (min-width: 740px) 480px, 65.71vw&quot;&gt;&lt;/picture&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/n-4RMUBia6-160.avif 160w, https://damianwalsh.co.uk/img/cache/n-4RMUBia6-320.avif 320w, https://damianwalsh.co.uk/img/cache/n-4RMUBia6-480.avif 480w&quot; sizes=&quot;(min-width: 1700px) 329px, (min-width: 1380px) calc(32vw - 209px), (min-width: 780px) calc(30.69vw - 89px), (min-width: 740px) 480px, 65.71vw&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/n-4RMUBia6-160.webp 160w, https://damianwalsh.co.uk/img/cache/n-4RMUBia6-320.webp 320w, https://damianwalsh.co.uk/img/cache/n-4RMUBia6-480.webp 480w&quot; sizes=&quot;(min-width: 1700px) 329px, (min-width: 1380px) calc(32vw - 209px), (min-width: 780px) calc(30.69vw - 89px), (min-width: 740px) 480px, 65.71vw&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://damianwalsh.co.uk/img/cache/n-4RMUBia6-160.jpeg&quot; alt=&quot;High-quality cover image of Brian Eno&#39;s Another Green World, showing the distinctive abstract artwork without any stickers or reflections.&quot; width=&quot;480&quot; height=&quot;480&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/n-4RMUBia6-160.jpeg 160w, https://damianwalsh.co.uk/img/cache/n-4RMUBia6-320.jpeg 320w, https://damianwalsh.co.uk/img/cache/n-4RMUBia6-480.jpeg 480w&quot; sizes=&quot;(min-width: 1700px) 329px, (min-width: 1380px) calc(32vw - 209px), (min-width: 780px) calc(30.69vw - 89px), (min-width: 740px) 480px, 65.71vw&quot;&gt;&lt;/picture&gt;&lt;/div&gt;&lt;figcaption class=&quot;meta&quot;&gt;Image quality comparison: API vs personal choice&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;The API&#39;s version is marred by a sticker and, on closer inspection, has a distracting reflection on the cover. To take control over quality, I select and process my own images using &lt;a href=&quot;https://imagemagick.org/&quot;&gt;ImageMagick&lt;/a&gt; installed with &lt;a href=&quot;https://brew.sh/&quot;&gt;Homebrew&lt;/a&gt;. Within templates, I use the Eleventy &lt;a href=&quot;https://www.11ty.dev/docs/plugins/image/&quot;&gt;Image&lt;/a&gt; plugin to automatically optimise images and the built-in &lt;a href=&quot;https://www.11ty.dev/docs/filters/slugify/&quot;&gt;slugify&lt;/a&gt; filter to construct paths to images.&lt;/p&gt;&lt;h3 id=&quot;data-cascade&quot; tabindex=&quot;-1&quot;&gt;Data cascade&lt;/h3&gt;&lt;p&gt;In Eleventy, data from multiple sources merges through a process called the &lt;a href=&quot;https://www.11ty.dev/docs/data-cascade/&quot;&gt;Data Cascade&lt;/a&gt; before templates are rendered. Using the library metaphor, Eleventy acts as a librarian—it consults the global data files (library catalogue) and uses the release ID (call number) to fetch data from the API, organise everything, and render templates when I run &lt;code&gt;npx @11ty/eleventy&lt;/code&gt; at the command line. All this happens quickly, as Eleventy&#39;s report after building my site demonstrates: &lt;code&gt;Wrote 1,310 files in 43.67 seconds (33.3ms each, v3.0.0)&lt;/code&gt;.&lt;/p&gt;&lt;figure&gt;&lt;div class=&quot;screenshots&quot;&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/t5snlkTBNT-160.avif 160w, https://damianwalsh.co.uk/img/cache/t5snlkTBNT-320.avif 320w, https://damianwalsh.co.uk/img/cache/t5snlkTBNT-480.avif 480w, https://damianwalsh.co.uk/img/cache/t5snlkTBNT-640.avif 640w, https://damianwalsh.co.uk/img/cache/t5snlkTBNT-960.avif 960w, https://damianwalsh.co.uk/img/cache/t5snlkTBNT-1280.avif 1280w&quot; sizes=&quot;(min-width: 1700px) 680px, (min-width: 1380px) calc(64vw - 395px), (min-width: 780px) calc(62.07vw - 166px), 70.87vw&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/t5snlkTBNT-160.webp 160w, https://damianwalsh.co.uk/img/cache/t5snlkTBNT-320.webp 320w, https://damianwalsh.co.uk/img/cache/t5snlkTBNT-480.webp 480w, https://damianwalsh.co.uk/img/cache/t5snlkTBNT-640.webp 640w, https://damianwalsh.co.uk/img/cache/t5snlkTBNT-960.webp 960w, https://damianwalsh.co.uk/img/cache/t5snlkTBNT-1280.webp 1280w&quot; sizes=&quot;(min-width: 1700px) 680px, (min-width: 1380px) calc(64vw - 395px), (min-width: 780px) calc(62.07vw - 166px), 70.87vw&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://damianwalsh.co.uk/img/cache/t5snlkTBNT-160.png&quot; alt=&quot;A montage of screenshots showcasing the digital music collection optimised for small screens in a grid layout.&quot; width=&quot;1280&quot; height=&quot;1071&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/t5snlkTBNT-160.png 160w, https://damianwalsh.co.uk/img/cache/t5snlkTBNT-320.png 320w, https://damianwalsh.co.uk/img/cache/t5snlkTBNT-480.png 480w, https://damianwalsh.co.uk/img/cache/t5snlkTBNT-640.png 640w, https://damianwalsh.co.uk/img/cache/t5snlkTBNT-960.png 960w, https://damianwalsh.co.uk/img/cache/t5snlkTBNT-1280.png 1280w&quot; sizes=&quot;(min-width: 1700px) 680px, (min-width: 1380px) calc(64vw - 395px), (min-width: 780px) calc(62.07vw - 166px), 70.87vw&quot;&gt;&lt;/picture&gt;&lt;/div&gt;&lt;figcaption class=&quot;meta&quot;&gt;Templates rendered by Eleventy&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3 id=&quot;retrospective&quot; tabindex=&quot;-1&quot;&gt;Retrospective&lt;/h3&gt;&lt;p&gt;What have I learned? The concepts borrowed from Bush and libraries are worth pursuing—technology can be used to breathe new life into classic ideas.&lt;/p&gt;&lt;p&gt;The learning and development process has been enjoyable, rather than just a means to an end. Eleventy feels almost magical—there&#39;s no need for databases or complex frameworks. Instead, I can work with familiar web technologies (HTML, CSS &amp;amp; JS) and closely related concepts and tools.&lt;/p&gt;&lt;p&gt;If I can use Eleventy to build a time machine—unlocking personal memories and feelings by revisiting any specific &lt;a href=&quot;https://damianwalsh.co.uk/music/formats/vinyl&quot;&gt;format&lt;/a&gt;, &lt;a href=&quot;https://damianwalsh.co.uk/music/genres/rock&quot;&gt;genre&lt;/a&gt;, &lt;a href=&quot;https://damianwalsh.co.uk/music/years/1994&quot;&gt;year&lt;/a&gt;, or &lt;a href=&quot;https://damianwalsh.co.uk/music/artists/david-bowie&quot;&gt;artist&lt;/a&gt; in my library and playing these records—I wonder what else I can build?&lt;/p&gt;&lt;p&gt;The proof of concept has triggered new ideas that provide momentum to continue development, including:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Enriching API data with personal touches: highlighting standout tracks, tracking favourites over time, and adding personal reviews and memories connected to specific times, places, people, and events&lt;/li&gt;&lt;li&gt;Enhancing views with data visualisations (think &lt;a href=&quot;https://informationisbeautiful.net/&quot;&gt;Information is Beautiful&lt;/a&gt;)&lt;/li&gt;&lt;li&gt;Improving data requests and error handling&lt;/li&gt;&lt;li&gt;Refining image processing workflows&lt;/li&gt;&lt;li&gt;Adding search functionality&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Looking back at my original motivation—disenchantment with streaming services and the tech industry&#39;s current trajectory—and comparing it to my experiences with this project brings to mind diving. Given the choice between diving into a stream or an ocean, who wouldn&#39;t choose the ocean?&lt;/p&gt;&lt;figure&gt;&lt;div class=&quot;screenshots&quot;&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/SyYDjsYxo9-160.avif 160w, https://damianwalsh.co.uk/img/cache/SyYDjsYxo9-320.avif 320w, https://damianwalsh.co.uk/img/cache/SyYDjsYxo9-480.avif 480w, https://damianwalsh.co.uk/img/cache/SyYDjsYxo9-640.avif 640w&quot; sizes=&quot;(min-width: 1700px) 680px, (min-width: 1380px) calc(64vw - 395px), (min-width: 780px) calc(62.07vw - 166px), 70.87vw&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/SyYDjsYxo9-160.webp 160w, https://damianwalsh.co.uk/img/cache/SyYDjsYxo9-320.webp 320w, https://damianwalsh.co.uk/img/cache/SyYDjsYxo9-480.webp 480w, https://damianwalsh.co.uk/img/cache/SyYDjsYxo9-640.webp 640w&quot; sizes=&quot;(min-width: 1700px) 680px, (min-width: 1380px) calc(64vw - 395px), (min-width: 780px) calc(62.07vw - 166px), 70.87vw&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://damianwalsh.co.uk/img/cache/SyYDjsYxo9-160.jpeg&quot; alt=&quot;A photograph of a figure diving into a mirror-like ocean surface, in this context used to symbolise the journey of exploration and discovery.&quot; width=&quot;640&quot; height=&quot;493&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/SyYDjsYxo9-160.jpeg 160w, https://damianwalsh.co.uk/img/cache/SyYDjsYxo9-320.jpeg 320w, https://damianwalsh.co.uk/img/cache/SyYDjsYxo9-480.jpeg 480w, https://damianwalsh.co.uk/img/cache/SyYDjsYxo9-640.jpeg 640w&quot; sizes=&quot;(min-width: 1700px) 680px, (min-width: 1380px) calc(64vw - 395px), (min-width: 780px) calc(62.07vw - 166px), 70.87vw&quot;&gt;&lt;/picture&gt;&lt;/div&gt;&lt;figcaption class=&quot;meta&quot;&gt;Image from inside cover of &lt;a href=&quot;https://damianwalsh.co.uk/music/releases/wish-you-were-here-pink-floyd-vinyl&quot;&gt;Wish You Were Here&lt;/a&gt;&lt;br&gt;© Pink Floyd Music&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2 id=&quot;version-2%3A-memory-boxes&quot; tabindex=&quot;-1&quot;&gt;Version 2: Memory boxes&lt;/h2&gt;&lt;p&gt;&lt;time class=&quot;meta&quot; datetime=&quot;2025-02&quot;&gt;February 2025&lt;/time&gt;&lt;/p&gt;&lt;p&gt;After reflecting on ideas generated during the &lt;a href=&quot;https://damianwalsh.co.uk/posts/creating-connections-with-music-and-technology/#version-1%3A-proof-of-concept&quot;&gt;proof-of-concept&lt;/a&gt; development, I faced a choice: pursue the idea of enhancing views with data visualisations—an appealing design direction—or focus on something more personally meaningful. I was already well aware of music&#39;s connection to memory, but was still surprised by the wave of memories and feelings that emerged when I organised my collection chronologically. Instead of adopting streaming platforms&#39; one-size-fits-all organisational approach, I want to create personal pathways linking music to memory. I chose to follow the trail of ideas leading from enriching API data with memories connected to specific times, places, people, and events. This direction seemed more aligned with Bush&#39;s vision: creating a personal memory extension that, in this context, connects music to life experiences.&lt;/p&gt;&lt;figure&gt;&lt;div class=&quot;screenshots&quot;&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/CrHJ40rPfo-160.avif 160w, https://damianwalsh.co.uk/img/cache/CrHJ40rPfo-320.avif 320w, https://damianwalsh.co.uk/img/cache/CrHJ40rPfo-480.avif 480w, https://damianwalsh.co.uk/img/cache/CrHJ40rPfo-640.avif 640w, https://damianwalsh.co.uk/img/cache/CrHJ40rPfo-960.avif 960w, https://damianwalsh.co.uk/img/cache/CrHJ40rPfo-1280.avif 1280w&quot; sizes=&quot;(min-width: 1700px) 680px, (min-width: 1380px) calc(64vw - 395px), (min-width: 780px) calc(62.07vw - 166px), 70.87vw&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/CrHJ40rPfo-160.webp 160w, https://damianwalsh.co.uk/img/cache/CrHJ40rPfo-320.webp 320w, https://damianwalsh.co.uk/img/cache/CrHJ40rPfo-480.webp 480w, https://damianwalsh.co.uk/img/cache/CrHJ40rPfo-640.webp 640w, https://damianwalsh.co.uk/img/cache/CrHJ40rPfo-960.webp 960w, https://damianwalsh.co.uk/img/cache/CrHJ40rPfo-1280.webp 1280w&quot; sizes=&quot;(min-width: 1700px) 680px, (min-width: 1380px) calc(64vw - 395px), (min-width: 780px) calc(62.07vw - 166px), 70.87vw&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://damianwalsh.co.uk/img/cache/CrHJ40rPfo-160.jpeg&quot; alt=&quot;A montage of personal photographs connected to specific times, places, people, and events arranged in a grid.&quot; width=&quot;1280&quot; height=&quot;960&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/CrHJ40rPfo-160.jpeg 160w, https://damianwalsh.co.uk/img/cache/CrHJ40rPfo-320.jpeg 320w, https://damianwalsh.co.uk/img/cache/CrHJ40rPfo-480.jpeg 480w, https://damianwalsh.co.uk/img/cache/CrHJ40rPfo-640.jpeg 640w, https://damianwalsh.co.uk/img/cache/CrHJ40rPfo-960.jpeg 960w, https://damianwalsh.co.uk/img/cache/CrHJ40rPfo-1280.jpeg 1280w&quot; sizes=&quot;(min-width: 1700px) 680px, (min-width: 1380px) calc(64vw - 395px), (min-width: 780px) calc(62.07vw - 166px), 70.87vw&quot;&gt;&lt;/picture&gt;&lt;/div&gt;&lt;figcaption class=&quot;meta&quot;&gt;Building connections between music, memory and emotion&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;Things I know:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;My initial assumptions about APIs and Eleventy—that they could provide the data and create the automated connections needed for a personalised library system—have now been confirmed.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Assumptions:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Building on lessons learned developing the proof of concept, I can create trails of reference that link my music collection with memories.&lt;/p&gt;&lt;h3 id=&quot;the-working-model-of-memory&quot; tabindex=&quot;-1&quot;&gt;The working model of memory&lt;/h3&gt;&lt;p&gt;The &lt;a href=&quot;https://en.wikipedia.org/wiki/Baddeley%27s_model_of_working_memory&quot;&gt;Working Memory Model&lt;/a&gt;, first proposed by Baddeley and Hitch in 1974 and updated in 2001, describes how the brain processes visual and auditory information. In this model, different compartments—the phonological loop, visuo-spatial sketchpad, episodic buffer, and central executive—each handle different aspects of processing. New information is initially stored in short-term memory before being related to long-term memory. Understanding this model (at a &lt;em&gt;basic&lt;/em&gt; level) casts light on how visual and spatial cues might be used alongside music to unlock memories and feelings—triggering the episodic buffer, which integrates sounds, visuals, and long-term memories into brief, temporal experiences.&lt;/p&gt;&lt;figure&gt;&lt;div class=&quot;screenshots&quot;&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/AYxuh7NKuZ-160.avif 160w, https://damianwalsh.co.uk/img/cache/AYxuh7NKuZ-320.avif 320w, https://damianwalsh.co.uk/img/cache/AYxuh7NKuZ-480.avif 480w, https://damianwalsh.co.uk/img/cache/AYxuh7NKuZ-640.avif 640w, https://damianwalsh.co.uk/img/cache/AYxuh7NKuZ-960.avif 960w, https://damianwalsh.co.uk/img/cache/AYxuh7NKuZ-1280.avif 1280w&quot; sizes=&quot;(min-width: 1700px) 680px, (min-width: 1380px) calc(64vw - 395px), (min-width: 780px) calc(62.07vw - 166px), 70.87vw&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/AYxuh7NKuZ-160.webp 160w, https://damianwalsh.co.uk/img/cache/AYxuh7NKuZ-320.webp 320w, https://damianwalsh.co.uk/img/cache/AYxuh7NKuZ-480.webp 480w, https://damianwalsh.co.uk/img/cache/AYxuh7NKuZ-640.webp 640w, https://damianwalsh.co.uk/img/cache/AYxuh7NKuZ-960.webp 960w, https://damianwalsh.co.uk/img/cache/AYxuh7NKuZ-1280.webp 1280w&quot; sizes=&quot;(min-width: 1700px) 680px, (min-width: 1380px) calc(64vw - 395px), (min-width: 780px) calc(62.07vw - 166px), 70.87vw&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://damianwalsh.co.uk/img/cache/AYxuh7NKuZ-160.png&quot; alt=&quot;Flowchart diagram showing how working memory processes information through interconnected components.&quot; width=&quot;1280&quot; height=&quot;736&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/AYxuh7NKuZ-160.png 160w, https://damianwalsh.co.uk/img/cache/AYxuh7NKuZ-320.png 320w, https://damianwalsh.co.uk/img/cache/AYxuh7NKuZ-480.png 480w, https://damianwalsh.co.uk/img/cache/AYxuh7NKuZ-640.png 640w, https://damianwalsh.co.uk/img/cache/AYxuh7NKuZ-960.png 960w, https://damianwalsh.co.uk/img/cache/AYxuh7NKuZ-1280.png 1280w&quot; sizes=&quot;(min-width: 1700px) 680px, (min-width: 1380px) calc(64vw - 395px), (min-width: 780px) calc(62.07vw - 166px), 70.87vw&quot;&gt;&lt;/picture&gt;&lt;/div&gt;&lt;figcaption class=&quot;meta&quot;&gt;The Working Memory Model. Baddeley and Hitch (1974, 2001)&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3 id=&quot;zettelkasten&quot; tabindex=&quot;-1&quot;&gt;Zettelkasten&lt;/h3&gt;&lt;p&gt;One of the concepts I came across while researching how to practically apply this idea to connect my music collection with people, places, and events was &lt;a href=&quot;https://en.wikipedia.org/wiki/Zettelkasten&quot;&gt;Zettelkasten&lt;/a&gt;—which, in addition to being a word that sounds good enough to eat—is a method of &lt;a href=&quot;https://en.wikipedia.org/wiki/Note-taking&quot;&gt;note-taking&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Personal_knowledge_management&quot;&gt;personal knowledge management&lt;/a&gt; used for research, study, and writing. This system was also the original inspiration for the &lt;a href=&quot;https://en.wikipedia.org/wiki/History_of_wikis&quot;&gt;invention of wikis&lt;/a&gt;.&lt;/p&gt;&lt;figure&gt;&lt;div class=&quot;screenshots&quot;&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/RiG92siNEJ-160.avif 160w, https://damianwalsh.co.uk/img/cache/RiG92siNEJ-320.avif 320w, https://damianwalsh.co.uk/img/cache/RiG92siNEJ-480.avif 480w, https://damianwalsh.co.uk/img/cache/RiG92siNEJ-640.avif 640w, https://damianwalsh.co.uk/img/cache/RiG92siNEJ-960.avif 960w, https://damianwalsh.co.uk/img/cache/RiG92siNEJ-1280.avif 1280w&quot; sizes=&quot;(min-width: 1700px) 680px, (min-width: 1380px) calc(64vw - 395px), (min-width: 780px) calc(62.07vw - 166px), 70.87vw&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/RiG92siNEJ-160.webp 160w, https://damianwalsh.co.uk/img/cache/RiG92siNEJ-320.webp 320w, https://damianwalsh.co.uk/img/cache/RiG92siNEJ-480.webp 480w, https://damianwalsh.co.uk/img/cache/RiG92siNEJ-640.webp 640w, https://damianwalsh.co.uk/img/cache/RiG92siNEJ-960.webp 960w, https://damianwalsh.co.uk/img/cache/RiG92siNEJ-1280.webp 1280w&quot; sizes=&quot;(min-width: 1700px) 680px, (min-width: 1380px) calc(64vw - 395px), (min-width: 780px) calc(62.07vw - 166px), 70.87vw&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://damianwalsh.co.uk/img/cache/RiG92siNEJ-160.png&quot; alt=&quot;Schematic diagram illustrating how knowledge can be interconnected in a flexible information management system.&quot; width=&quot;1280&quot; height=&quot;960&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/RiG92siNEJ-160.png 160w, https://damianwalsh.co.uk/img/cache/RiG92siNEJ-320.png 320w, https://damianwalsh.co.uk/img/cache/RiG92siNEJ-480.png 480w, https://damianwalsh.co.uk/img/cache/RiG92siNEJ-640.png 640w, https://damianwalsh.co.uk/img/cache/RiG92siNEJ-960.png 960w, https://damianwalsh.co.uk/img/cache/RiG92siNEJ-1280.png 1280w&quot; sizes=&quot;(min-width: 1700px) 680px, (min-width: 1380px) calc(64vw - 395px), (min-width: 780px) calc(62.07vw - 166px), 70.87vw&quot;&gt;&lt;/picture&gt;&lt;/div&gt;&lt;figcaption class=&quot;meta&quot;&gt;Zettelkasten knowledge management system.&lt;br&gt;Image by David B. Clear, licensed under &lt;a href=&quot;https://creativecommons.org/licenses/by-sa/4.0/&quot; rel=&quot;license&quot;&gt;CC BY-SA 4.0&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;I use this method to extend my music collection&#39;s data structure by creating additional &lt;a href=&quot;https://www.11ty.dev/docs/data-global/&quot;&gt;Global Data Files&lt;/a&gt; to include people, places, and events.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;people.json&lt;/strong&gt;&lt;/p&gt;&lt;pre class=&quot;language-json&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-json&quot;&gt; &lt;span class=&quot;token property&quot;&gt;&quot;steve-s&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Steve&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;relationship&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;University friend&quot;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;places.json&lt;/strong&gt;&lt;/p&gt;&lt;pre class=&quot;language-json&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token property&quot;&gt;&quot;university&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;location&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;University of Plymouth (Exeter College of Art and Design)&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;coordinates&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token property&quot;&gt;&quot;lat&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;50.7099&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token property&quot;&gt;&quot;lng&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;-3.5135&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;musicCollection.json&lt;/strong&gt;&lt;/p&gt;&lt;pre class=&quot;language-json&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-json&quot;&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;artist&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Supergrass&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;title&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;I Should Coco&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;format&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;CD&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;release_id&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;4147466&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;favourite&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;memories&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token property&quot;&gt;&quot;people&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;token string&quot;&gt;&quot;steve-s&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token string&quot;&gt;&quot;alastair-j&quot;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token property&quot;&gt;&quot;places&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;token string&quot;&gt;&quot;university&quot;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This structure prevents duplicating person and place data across multiple entries in the main data file. Instead, it allows any number of people, places, or events to be linked using ID arrays, while making all the data accessible to templates through the &lt;a href=&quot;https://www.11ty.dev/docs/config/&quot;&gt;Configuration&lt;/a&gt; file in the root directory.&lt;/p&gt;&lt;pre class=&quot;language-js&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;eleventyConfig&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; peopleData &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;./_data/people.json&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  eleventyConfig&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addGlobalData&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;people&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; peopleData&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; placesData &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;./_data/places.json&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  eleventyConfig&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addGlobalData&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;places&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; placesData&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;With this basic setup, I can display people, places, and events connected to specific releases on templates. As I discovered earlier, &lt;a href=&quot;https://damianwalsh.co.uk/posts/creating-connections-with-music-and-technology/#filters&quot;&gt;Filters&lt;/a&gt; can handle simple transformations, but more interestingly, they can also be used to create pathways to other releases that share the same people, places, and events.&lt;/p&gt;&lt;pre class=&quot;language-js&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;eleventyConfig&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addFilter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;releasesWithMemoryConnections&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;allReleases&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; currentRelease&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;currentRelease&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;memories&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token comment&quot;&gt;// Get the release&#39;s memories&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; currentPeople &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;currentRelease&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;memories&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;people &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; currentPlaces &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;currentRelease&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;memories&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;places &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token comment&quot;&gt;// Filter releases that share people or places, excluding the current release&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; relatedReleases &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; allReleases&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;release&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;release&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;release_id &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; currentRelease&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;release_id&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;release&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;memories&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token comment&quot;&gt;// Check for shared people&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; sharedPeople &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; release&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;memories&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;people&lt;span class=&quot;token operator&quot;&gt;?.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;some&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;person&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt;
      currentPeople&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;has&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;person&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token comment&quot;&gt;// Check for shared places&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; sharedPlaces &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; release&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;memories&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;places&lt;span class=&quot;token operator&quot;&gt;?.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;some&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;place&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt;
      currentPlaces&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;has&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;place&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; sharedPeople &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; sharedPlaces&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token comment&quot;&gt;// Sort by artist, then title&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; relatedReleases&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;a&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; b&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; artistCompare &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; a&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;artist&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;localeCompare&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;b&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;artist&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;artistCompare &lt;span class=&quot;token operator&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; artistCompare&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; a&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;title&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;localeCompare&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;b&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;title&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;maps&quot; tabindex=&quot;-1&quot;&gt;Maps&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Spatial_memory&quot;&gt;Spatial memory&lt;/a&gt;, the visuo-spatial sketchpad in Baddeley and Hitch&#39;s model, plays a role in how we process and recall experiences. &lt;a href=&quot;https://en.wikipedia.org/wiki/Cognitive_map&quot;&gt;Cognitive maps&lt;/a&gt;—complex networks of spatial relationships between landmarks, paths, and distances—help us navigate both physical spaces and through memory. I wanted to harness this natural connection between location and memory by incorporating maps into the memory box feature.&lt;/p&gt;&lt;p&gt;I evaluated several map providers that offer programmatic access, comparing their benefits and drawbacks against my requirements and values:&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;&lt;strong&gt;Provider&lt;/strong&gt;&lt;/th&gt;&lt;th&gt;&lt;strong&gt;Pros&lt;/strong&gt;&lt;/th&gt;&lt;th&gt;&lt;strong&gt;Cons&lt;/strong&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;https://leafletjs.com/&quot;&gt;Leaflet&lt;/a&gt; + &lt;a href=&quot;https://www.openstreetmap.org/&quot;&gt;OpenStreetMap&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Full interactivity possible, open source&lt;/td&gt;&lt;td&gt;More complex setup - managing tile servers etc.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;a href=&quot;https://www.mapbox.com/&quot;&gt;Mapbox&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Simple implementation, generous free tier (50,000 map loads/month)&lt;/td&gt;&lt;td&gt;Credit card details required to access API key&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;Although Leaflet appeared to offer more customisation options and is fully open source, I chose Mapbox because it seemed easier for me to implement and suits my current needs for static maps with location markers while leaving the door open for adding interactive features later.&lt;/p&gt;&lt;p&gt;First, I configure the &lt;a href=&quot;https://www.11ty.dev/docs/plugins/fetch/&quot;&gt;Fetch plugin&lt;/a&gt; in a separate &lt;a href=&quot;https://www.11ty.dev/docs/data-global/&quot;&gt;Global Data File&lt;/a&gt; to manage requests for static map graphics from the &lt;a href=&quot;https://docs.mapbox.com/api/overview/&quot;&gt;Mapbox API&lt;/a&gt;. The code places markers at specified coordinates and creates map URLs for both single and multiple locations. By caching the map images, I avoid unnecessary API requests and minimise potential costs—though exceeding the free tier limit is unlikely given my collection size and map requirements.&lt;/p&gt;&lt;pre class=&quot;language-js&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; EleventyFetch &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;@11ty/eleventy-fetch&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;generateStaticMap&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;places&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; mapboxToken&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token comment&quot;&gt;// Filter out places without coordinates&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; markers &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; places&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;place&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; place&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;coordinates&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;markers&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; width &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;800&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; height &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;400&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token comment&quot;&gt;// Create marker overlay string&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; markerString &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; markers
    &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;place&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;pin-s+FF0000(&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;place&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;coordinates&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;lng&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;place&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;coordinates&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;lat&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;,&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; mapUrl&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;markers&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// Single marker - use center and zoom&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; marker &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; markers&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    mapUrl &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;https://api.mapbox.com/styles/v1/mapbox/streets-v11/static/&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;markerString&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;marker&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;coordinates&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;lng&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;marker&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;coordinates&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;lat&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;,12/&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;width&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;height&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;?access_token=&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;mapboxToken&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// Multiple markers - use auto&lt;/span&gt;
    mapUrl &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;https://api.mapbox.com/styles/v1/mapbox/streets-v11/static/&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;markerString&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;/auto/&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;width&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;height&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;?padding=50&amp;amp;access_token=&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;mapboxToken&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; imageBuffer &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;EleventyFetch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;mapUrl&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token literal-property property&quot;&gt;duration&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;1d&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token literal-property property&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;buffer&quot;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; imageBuffer&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; width&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; height &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;error&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Error generating map:&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; error&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then, a &lt;a href=&quot;https://www.11ty.dev/docs/shortcodes/&quot;&gt;Shortcode&lt;/a&gt; in my configuration makes the function available in templates to generate a map for the places associated with the release.&lt;/p&gt;&lt;pre class=&quot;language-js&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; generateStaticMap &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;./_data/maps.js&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;eleventyConfig&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  eleventyConfig&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addShortcode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;memoryMap&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;places&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; mapboxToken &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; process&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;env&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;MAPBOX_TOKEN&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;mapboxToken&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;warn&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;No Mapbox token found&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; mapData &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;generateStaticMap&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;places&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; mapboxToken&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;mapData&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token comment&quot;&gt;// Return map HTML with base64 encoded image&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; base64Image &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; mapData&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;imageBuffer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;base64&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;lt;img src=&quot;data:image/png;base64,&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;base64Image&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;
           alt=&quot;Map showing memory locations&quot;
           width=&quot;660&quot; height=&quot;330&quot; class=&quot;places__map&quot;&gt;&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;release-template&quot; tabindex=&quot;-1&quot;&gt;Release template&lt;/h3&gt;&lt;p&gt;Finally, on the actual release pages, the visual design draws inspiration from diagrams of both Baddeley and Hitch&#39;s Working Memory Model and the Zettelkasten concept. The layouts flexibly adapt to different screen sizes and memory content. When I browse my library now, each release page functions as a personalised record sleeve, offering cues that help trigger memories as I play the music.&lt;/p&gt;&lt;p&gt;Examples of release pages with memory box feature:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://damianwalsh.co.uk/music/releases/orbital-orbital-cd.html&quot;&gt;Orbital - Orbital&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://damianwalsh.co.uk/music/releases/stanley-road-paul-weller-vinyl.html&quot;&gt;Stanley Road - Paul Weller&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://damianwalsh.co.uk/music/releases/i-should-coco-supergrass-cd.html&quot;&gt;I Should Coco - Supergrass&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure&gt;&lt;div class=&quot;screenshots&quot;&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/u7wsvYhY5A-160.avif 160w, https://damianwalsh.co.uk/img/cache/u7wsvYhY5A-320.avif 320w, https://damianwalsh.co.uk/img/cache/u7wsvYhY5A-480.avif 480w, https://damianwalsh.co.uk/img/cache/u7wsvYhY5A-640.avif 640w, https://damianwalsh.co.uk/img/cache/u7wsvYhY5A-960.avif 960w, https://damianwalsh.co.uk/img/cache/u7wsvYhY5A-1280.avif 1280w&quot; sizes=&quot;(min-width: 1700px) 680px, (min-width: 1380px) calc(64vw - 395px), (min-width: 780px) calc(62.07vw - 166px), 70.87vw&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/u7wsvYhY5A-160.webp 160w, https://damianwalsh.co.uk/img/cache/u7wsvYhY5A-320.webp 320w, https://damianwalsh.co.uk/img/cache/u7wsvYhY5A-480.webp 480w, https://damianwalsh.co.uk/img/cache/u7wsvYhY5A-640.webp 640w, https://damianwalsh.co.uk/img/cache/u7wsvYhY5A-960.webp 960w, https://damianwalsh.co.uk/img/cache/u7wsvYhY5A-1280.webp 1280w&quot; sizes=&quot;(min-width: 1700px) 680px, (min-width: 1380px) calc(64vw - 395px), (min-width: 780px) calc(62.07vw - 166px), 70.87vw&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://damianwalsh.co.uk/img/cache/u7wsvYhY5A-160.png&quot; alt=&quot;Screenshots showing memory box layouts at mobile and desktop screen sizes.&quot; width=&quot;1280&quot; height=&quot;693&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/u7wsvYhY5A-160.png 160w, https://damianwalsh.co.uk/img/cache/u7wsvYhY5A-320.png 320w, https://damianwalsh.co.uk/img/cache/u7wsvYhY5A-480.png 480w, https://damianwalsh.co.uk/img/cache/u7wsvYhY5A-640.png 640w, https://damianwalsh.co.uk/img/cache/u7wsvYhY5A-960.png 960w, https://damianwalsh.co.uk/img/cache/u7wsvYhY5A-1280.png 1280w&quot; sizes=&quot;(min-width: 1700px) 680px, (min-width: 1380px) calc(64vw - 395px), (min-width: 780px) calc(62.07vw - 166px), 70.87vw&quot;&gt;&lt;/picture&gt;&lt;/div&gt;&lt;figcaption class=&quot;meta&quot;&gt;Templates rendered by Eleventy&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3 id=&quot;retrospective-1&quot; tabindex=&quot;-1&quot;&gt;Retrospective&lt;/h3&gt;&lt;p&gt;I&#39;ve only mapped a couple of releases so far, and completing the process will take time. That&#39;s perfectly fine—like listening to music, I want to move at my own pace taking time to reflect and enjoy this project. Some of my working practices might be considered &amp;quot;agile&amp;quot; but this isn&#39;t a sprint, and there&#39;s no quarterly product review looming on the horizon. I view this as an enabling release that lays the foundation for future development, which might include:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Creating an admin interface that writes to data files, making it easier to establish bi-directional links and using collections to categorise releases by people, places, and events—similar to the existing system for artists, genres, and years.&lt;/li&gt;&lt;li&gt;Incorporating personal photographs by leveraging the existing people, place, and year data structures.&lt;/li&gt;&lt;li&gt;Enhancing the map functionality to create an interactive narrative showing the connections between music, people, and places.&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;version-3%3A-time-machine&quot; tabindex=&quot;-1&quot;&gt;Version 3: Time machine&lt;/h2&gt;&lt;p&gt;&lt;time class=&quot;meta&quot; datetime=&quot;2025-05&quot;&gt;June 2025&lt;/time&gt;&lt;/p&gt;&lt;p&gt;The &lt;a href=&quot;https://damianwalsh.co.uk/posts/creating-connections-with-music-and-technology/#version-2%3A-memory-boxes&quot;&gt;previous iteration&lt;/a&gt; showed I could apply Baddeley and Hitch&#39;s Working Memory Model and the Zettelkasten method to create memory-based connections in my music collection. But—there&#39;s always a but, isn&#39;t there?—limitations emerged as I mapped more releases. Each addition triggered new memories and connections, revealing gaps in how the existing setup functioned as an aide-mémoire. Filtering one-way connections from the main data file to people, places, and events restricted how I could arrange content to match my way of thinking.&lt;/p&gt;&lt;p&gt;Organising and finding releases like a record shop works well in this respect when there&#39;s a clear, singular connection between release date and memory. A record like &lt;a href=&quot;https://damianwalsh.co.uk/music/releases/definitely-maybe-oasis-vinyl/&quot;&gt;Definitely Maybe&lt;/a&gt; had a big impact on me when it was released. Listening to it now transports me back, evoking memories from that particular moment in life—nothing more, nothing less.&lt;/p&gt;&lt;p&gt;Things become complicated when records lack this straightforward type of connection. The Beatles are a perfect example: their records were released before I was born, and I didn&#39;t start adding them to my own collection until they were rereleased in the 2000s. Their songs evoke both childhood and more recent memories as I revisit these records later in life. Albums like &lt;a href=&quot;https://damianwalsh.co.uk/music/releases/bandwagonesque-teenage-fanclub-vinyl/&quot;&gt;Bandwagonesque&lt;/a&gt; or &lt;a href=&quot;https://damianwalsh.co.uk/music/releases/fuzzy-logic-super-furry-animals-vinyl/&quot;&gt;Fuzzy Logic&lt;/a&gt;, which I bought around the time they were originally released, now recall various periods in my life, different people and places, and a mix of feelings and emotions: friendship and loneliness, happiness and sadness. So the goal became how to organise and create pathways through my collection that help me find releases that summon memories from specific periods of my life or people, places, and events—quite different from the classifications used in streaming platforms.&lt;/p&gt;&lt;figure&gt;&lt;div class=&quot;screenshots&quot;&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/ZSpm7-KcL2-160.avif 160w, https://damianwalsh.co.uk/img/cache/ZSpm7-KcL2-320.avif 320w, https://damianwalsh.co.uk/img/cache/ZSpm7-KcL2-480.avif 480w, https://damianwalsh.co.uk/img/cache/ZSpm7-KcL2-640.avif 640w, https://damianwalsh.co.uk/img/cache/ZSpm7-KcL2-960.avif 960w, https://damianwalsh.co.uk/img/cache/ZSpm7-KcL2-1280.avif 1280w&quot; sizes=&quot;(min-width: 1700px) 680px, (min-width: 1380px) calc(64vw - 395px), (min-width: 780px) calc(62.07vw - 166px), 70.87vw&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/ZSpm7-KcL2-160.webp 160w, https://damianwalsh.co.uk/img/cache/ZSpm7-KcL2-320.webp 320w, https://damianwalsh.co.uk/img/cache/ZSpm7-KcL2-480.webp 480w, https://damianwalsh.co.uk/img/cache/ZSpm7-KcL2-640.webp 640w, https://damianwalsh.co.uk/img/cache/ZSpm7-KcL2-960.webp 960w, https://damianwalsh.co.uk/img/cache/ZSpm7-KcL2-1280.webp 1280w&quot; sizes=&quot;(min-width: 1700px) 680px, (min-width: 1380px) calc(64vw - 395px), (min-width: 780px) calc(62.07vw - 166px), 70.87vw&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://damianwalsh.co.uk/img/cache/ZSpm7-KcL2-160.jpeg&quot; alt=&quot;A scene from Mad Men where the main character shifts focus away from a product&#39;s technical features and instead demonstrates its emotional impact through the power of nostalgia.&quot; width=&quot;1280&quot; height=&quot;720&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/ZSpm7-KcL2-160.jpeg 160w, https://damianwalsh.co.uk/img/cache/ZSpm7-KcL2-320.jpeg 320w, https://damianwalsh.co.uk/img/cache/ZSpm7-KcL2-480.jpeg 480w, https://damianwalsh.co.uk/img/cache/ZSpm7-KcL2-640.jpeg 640w, https://damianwalsh.co.uk/img/cache/ZSpm7-KcL2-960.jpeg 960w, https://damianwalsh.co.uk/img/cache/ZSpm7-KcL2-1280.jpeg 1280w&quot; sizes=&quot;(min-width: 1700px) 680px, (min-width: 1380px) calc(64vw - 395px), (min-width: 780px) calc(62.07vw - 166px), 70.87vw&quot;&gt;&lt;/picture&gt;&lt;/div&gt;&lt;figcaption class=&quot;meta&quot;&gt;Emotional impact vs technical features.&lt;br&gt;&lt;a href=&quot;https://m.youtube.com/watch?v=rq3n2sJ43Hg&quot;&gt;The Carousel Pitch&lt;/a&gt;, Mad Men Season 1, Episode 13&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;I&#39;ve included this reference to a scene from &lt;a href=&quot;https://en.wikipedia.org/wiki/Mad_Men&quot;&gt;Mad Men&lt;/a&gt; because, apart from being wonderful, it captures the essence of what I&#39;m trying to achieve. And I suppose, because it also highlights the gap between how I think, what I want, and what these experiences often actually deliver.&lt;/p&gt;&lt;h3 id=&quot;chapter-based-organisation&quot; tabindex=&quot;-1&quot;&gt;Chapter-based organisation&lt;/h3&gt;&lt;p&gt;Listening to records and making these connections not only brought me closer to my music collection and made me more mindful of associated memories—the process also revealed how to restructure the data files to achieve my goal of creating a more personally meaningful organisation. Introducing chapters creates a layer that can be used to organise releases and their associated memories—including related people, places, and events—into distinct periods marked by significant life events.&lt;/p&gt;&lt;figure&gt;&lt;div class=&quot;screenshots&quot;&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/l2dipSbSuZ-160.avif 160w, https://damianwalsh.co.uk/img/cache/l2dipSbSuZ-320.avif 320w, https://damianwalsh.co.uk/img/cache/l2dipSbSuZ-480.avif 480w, https://damianwalsh.co.uk/img/cache/l2dipSbSuZ-640.avif 640w, https://damianwalsh.co.uk/img/cache/l2dipSbSuZ-960.avif 960w, https://damianwalsh.co.uk/img/cache/l2dipSbSuZ-1280.avif 1280w&quot; sizes=&quot;(min-width: 1700px) 680px, (min-width: 1380px) calc(64vw - 395px), (min-width: 780px) calc(62.07vw - 166px), 70.87vw&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/l2dipSbSuZ-160.webp 160w, https://damianwalsh.co.uk/img/cache/l2dipSbSuZ-320.webp 320w, https://damianwalsh.co.uk/img/cache/l2dipSbSuZ-480.webp 480w, https://damianwalsh.co.uk/img/cache/l2dipSbSuZ-640.webp 640w, https://damianwalsh.co.uk/img/cache/l2dipSbSuZ-960.webp 960w, https://damianwalsh.co.uk/img/cache/l2dipSbSuZ-1280.webp 1280w&quot; sizes=&quot;(min-width: 1700px) 680px, (min-width: 1380px) calc(64vw - 395px), (min-width: 780px) calc(62.07vw - 166px), 70.87vw&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://damianwalsh.co.uk/img/cache/l2dipSbSuZ-160.png&quot; alt=&quot;A flow diagram illustrating how chapters act as a bridge between releases and their associated memories across different time periods.&quot; width=&quot;1280&quot; height=&quot;485&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/l2dipSbSuZ-160.png 160w, https://damianwalsh.co.uk/img/cache/l2dipSbSuZ-320.png 320w, https://damianwalsh.co.uk/img/cache/l2dipSbSuZ-480.png 480w, https://damianwalsh.co.uk/img/cache/l2dipSbSuZ-640.png 640w, https://damianwalsh.co.uk/img/cache/l2dipSbSuZ-960.png 960w, https://damianwalsh.co.uk/img/cache/l2dipSbSuZ-1280.png 1280w&quot; sizes=&quot;(min-width: 1700px) 680px, (min-width: 1380px) calc(64vw - 395px), (min-width: 780px) calc(62.07vw - 166px), 70.87vw&quot;&gt;&lt;/picture&gt;&lt;/div&gt;&lt;figcaption class=&quot;meta&quot;&gt;Chapters as a bridge between music and memory&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3 id=&quot;automating-connections&quot; tabindex=&quot;-1&quot;&gt;Automating connections&lt;/h3&gt;&lt;p&gt;I began by manually adding a few bi-directional links to test the idea. This experience underlined the benefit of automation, and my first thought was to create a typical CMS-style admin interface. A brief exchange on Mastodon with &lt;a href=&quot;https://mastodon.social/@sphars&quot;&gt;Spencer Harston&lt;/a&gt; led me to his blog post about &lt;a href=&quot;https://www.spencerharston.com/posts/2025/managing-my-books-data/&quot;&gt;managing data for his books page&lt;/a&gt;, helpfully guiding me towards using Node scripts.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/damianwalsh/damianwalsh.github.io/blob/master/_scripts/musicCLI.js&quot;&gt;musicCLI.js&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;This command-line tool built using &lt;a href=&quot;https://www.npmjs.com/package/commander&quot;&gt;Commander&lt;/a&gt; and &lt;a href=&quot;https://www.npmjs.com/package/inquirer&quot;&gt;Inquirer&lt;/a&gt; provides an interface to manage my music collection data.&lt;/p&gt;&lt;figure&gt;&lt;div class=&quot;screenshots&quot;&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/ehYbkrKEeu-160.avif 160w, https://damianwalsh.co.uk/img/cache/ehYbkrKEeu-320.avif 320w, https://damianwalsh.co.uk/img/cache/ehYbkrKEeu-480.avif 480w, https://damianwalsh.co.uk/img/cache/ehYbkrKEeu-640.avif 640w, https://damianwalsh.co.uk/img/cache/ehYbkrKEeu-960.avif 960w, https://damianwalsh.co.uk/img/cache/ehYbkrKEeu-1280.avif 1280w&quot; sizes=&quot;(min-width: 1700px) 680px, (min-width: 1380px) calc(64vw - 395px), (min-width: 780px) calc(62.07vw - 166px), 70.87vw&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/ehYbkrKEeu-160.webp 160w, https://damianwalsh.co.uk/img/cache/ehYbkrKEeu-320.webp 320w, https://damianwalsh.co.uk/img/cache/ehYbkrKEeu-480.webp 480w, https://damianwalsh.co.uk/img/cache/ehYbkrKEeu-640.webp 640w, https://damianwalsh.co.uk/img/cache/ehYbkrKEeu-960.webp 960w, https://damianwalsh.co.uk/img/cache/ehYbkrKEeu-1280.webp 1280w&quot; sizes=&quot;(min-width: 1700px) 680px, (min-width: 1380px) calc(64vw - 395px), (min-width: 780px) calc(62.07vw - 166px), 70.87vw&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://damianwalsh.co.uk/img/cache/ehYbkrKEeu-160.png&quot; alt=&quot;A screenshot showing the terminal interface displaying available commands including options to add releases, manage chapters, and create associations between content.&quot; width=&quot;1280&quot; height=&quot;910&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/ehYbkrKEeu-160.png 160w, https://damianwalsh.co.uk/img/cache/ehYbkrKEeu-320.png 320w, https://damianwalsh.co.uk/img/cache/ehYbkrKEeu-480.png 480w, https://damianwalsh.co.uk/img/cache/ehYbkrKEeu-640.png 640w, https://damianwalsh.co.uk/img/cache/ehYbkrKEeu-960.png 960w, https://damianwalsh.co.uk/img/cache/ehYbkrKEeu-1280.png 1280w&quot; sizes=&quot;(min-width: 1700px) 680px, (min-width: 1380px) calc(64vw - 395px), (min-width: 780px) calc(62.07vw - 166px), 70.87vw&quot;&gt;&lt;/picture&gt;&lt;/div&gt;&lt;figcaption class=&quot;meta&quot;&gt;Command-line interface for music collection&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;The CLI takes care of:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Adding new releases, chapters, people, places, and events&lt;/li&gt;&lt;li&gt;Automatically processing cover artwork&lt;/li&gt;&lt;li&gt;Creating bi-directional links between data files&lt;/li&gt;&lt;li&gt;Enriching data with information from APIs&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The entire workflow is simplified to a single command—&lt;code&gt;npm run music&lt;/code&gt; followed by various interactive prompts—eliminating the need to manually edit JSON files and run separate scripts for processing images, creating associations and data enrichment.&lt;/p&gt;&lt;h3 id=&quot;navigating-through-memories&quot; tabindex=&quot;-1&quot;&gt;Navigating through memories&lt;/h3&gt;&lt;p&gt;Instead of my original approach, using global data and Filter functions for memory connections on release pages, I now use Collections—creating multiple dimensions to explore. This approach enables me to generate different types of pages, opening up new ways to navigate my &lt;a href=&quot;https://damianwalsh.co.uk/music/&quot;&gt;music collection&lt;/a&gt; via meaningful personal connections—essentially creating playlists that let me travel through time by linking releases to &lt;a href=&quot;https://damianwalsh.co.uk/music/chapters/&quot;&gt;life periods&lt;/a&gt;, &lt;a href=&quot;https://damianwalsh.co.uk/music/people/&quot;&gt;people&lt;/a&gt;, places and &lt;a href=&quot;https://damianwalsh.co.uk/music/events/&quot;&gt;events&lt;/a&gt;.&lt;/p&gt;&lt;figure&gt;&lt;div class=&quot;screenshots no-pad&quot;&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/KIOO_B8Qow-160.avif 160w, https://damianwalsh.co.uk/img/cache/KIOO_B8Qow-320.avif 320w, https://damianwalsh.co.uk/img/cache/KIOO_B8Qow-480.avif 480w, https://damianwalsh.co.uk/img/cache/KIOO_B8Qow-640.avif 640w, https://damianwalsh.co.uk/img/cache/KIOO_B8Qow-960.avif 960w, https://damianwalsh.co.uk/img/cache/KIOO_B8Qow-1280.avif 1280w&quot; sizes=&quot;(min-width: 1700px) 680px, (min-width: 1380px) calc(64vw - 395px), (min-width: 780px) calc(62.07vw - 166px), 70.87vw&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/KIOO_B8Qow-160.webp 160w, https://damianwalsh.co.uk/img/cache/KIOO_B8Qow-320.webp 320w, https://damianwalsh.co.uk/img/cache/KIOO_B8Qow-480.webp 480w, https://damianwalsh.co.uk/img/cache/KIOO_B8Qow-640.webp 640w, https://damianwalsh.co.uk/img/cache/KIOO_B8Qow-960.webp 960w, https://damianwalsh.co.uk/img/cache/KIOO_B8Qow-1280.webp 1280w&quot; sizes=&quot;(min-width: 1700px) 680px, (min-width: 1380px) calc(64vw - 395px), (min-width: 780px) calc(62.07vw - 166px), 70.87vw&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://damianwalsh.co.uk/img/cache/KIOO_B8Qow-160.png&quot; alt=&quot;A screenshot of chapters linking releases to life periods.&quot; width=&quot;1280&quot; height=&quot;525&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/KIOO_B8Qow-160.png 160w, https://damianwalsh.co.uk/img/cache/KIOO_B8Qow-320.png 320w, https://damianwalsh.co.uk/img/cache/KIOO_B8Qow-480.png 480w, https://damianwalsh.co.uk/img/cache/KIOO_B8Qow-640.png 640w, https://damianwalsh.co.uk/img/cache/KIOO_B8Qow-960.png 960w, https://damianwalsh.co.uk/img/cache/KIOO_B8Qow-1280.png 1280w&quot; sizes=&quot;(min-width: 1700px) 680px, (min-width: 1380px) calc(64vw - 395px), (min-width: 780px) calc(62.07vw - 166px), 70.87vw&quot;&gt;&lt;/picture&gt;&lt;/div&gt;&lt;figcaption class=&quot;meta&quot;&gt;Templates rendered by Eleventy&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;As always, there is room for improvement. In some ways, this version is little more than a walking skeleton, and my aspirations stretch beyond what is now ready for release. But the foundations are established and can be built upon.&lt;/p&gt;&lt;h3 id=&quot;retrospective-2&quot; tabindex=&quot;-1&quot;&gt;Retrospective&lt;/h3&gt;&lt;p&gt;Any creative process describes the path of a rollercoaster—with peaks of optimism and troughs of doubt. This latest version followed that arc—I&#39;ve picked up the project and put it down several times, nearly throwing it out the window at least once. Its nature made me question whether I was using the past to shield myself from the present. Yet looking back can help you move forward. I&#39;ve renewed neglected skills and learned new things along the way, rediscovering purpose in the work and what, for me at least, it means to be a designer. And in a twist of fate, a project about memories and nostalgia has enabled me to build new connections and feel part of a community again. The sun shines on Manchester, a garden begins to bloom, and I feel hopeful.&lt;/p&gt;&lt;h2 id=&quot;acknowledgements&quot; tabindex=&quot;-1&quot;&gt;Acknowledgements&lt;/h2&gt;&lt;p&gt;Several members of the Eleventy community have published valuable resources that helped me get started:&lt;/p&gt;&lt;dl&gt;&lt;dt&gt;&lt;a href=&quot;https://bell.bz/&quot;&gt;Andy Bell&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;&lt;em&gt;Original author of &lt;a href=&quot;https://learn-eleventy.pages.dev/&quot;&gt;Learn Eleventy from Scratch&lt;/a&gt; (now maintained by &lt;a href=&quot;https://github.com/uncenter/&quot;&gt;Uncenter&lt;/a&gt;).&lt;/em&gt;&lt;/dd&gt;&lt;dt&gt;&lt;a href=&quot;https://thinkdobecreate.com/&quot;&gt;Stephanie Eckles&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;&lt;em&gt;Author of &lt;a href=&quot;https://11ty.rocks/&quot;&gt;11ty.Rocks&lt;/a&gt;.&lt;/em&gt;&lt;/dd&gt;&lt;dt&gt;&lt;a href=&quot;https://sia.codes/&quot;&gt;Sia Karamalegos&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;&lt;em&gt;Organiser of the &lt;a href=&quot;https://11tymeetup.dev/&quot;&gt;Eleventy Meetup&lt;/a&gt;.&lt;/em&gt;&lt;/dd&gt;&lt;dt&gt;&lt;a href=&quot;https://www.zachleat.com/&quot;&gt;Zach Leatherman&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;&lt;em&gt;Creator/maintainer of &lt;a href=&quot;https://www.11ty.dev/&quot;&gt;Eleventy&lt;/a&gt;.&lt;/em&gt;&lt;/dd&gt;&lt;dt&gt;&lt;a href=&quot;https://bobmonsour.com/&quot;&gt;Bob Monsour&lt;/a&gt;&lt;/dt&gt;&lt;dd&gt;&lt;em&gt;Author of &lt;a href=&quot;ttps://11tybundle.dev/&quot;&gt;The 11ty Bundle&lt;/a&gt; website and newsletter.&lt;/em&gt;&lt;/dd&gt;&lt;/dl&gt;&lt;h2 id=&quot;footnote&quot; tabindex=&quot;-1&quot;&gt;Footnote&lt;/h2&gt;&lt;p&gt;If you&#39;ve read this far and found it useful, that makes me happy. If you&#39;d like to offer advice on how I could improve my approach, please feel free—you can figure out how to get in touch with me easily enough. ↘&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Dynamic colour palettes with OKLCH and CSS custom properties</title>
    <link href="https://damianwalsh.co.uk/posts/dynamic-colour-palettes-with-oklch-and-css-custom-properties/" />
    <updated>2025-02-17T00:00:00Z</updated>
    <id>https://damianwalsh.co.uk/posts/dynamic-colour-palettes-with-oklch-and-css-custom-properties/</id>
    <content type="html">&lt;p&gt;Designers often seem to face extremes when selecting and using colours. At one end of the spectrum, brand guidelines limit you to a few colours chosen for specific applications, with additional colours added later—sometimes purely for aesthetics or where the reasons are unclear. Some of the colours might have tints and shades while others don&#39;t, and where variations exist, there could be inconsistent saturation and lightness levels across the palette. This makes it challenging to create colour-dependent components like buttons and form elements and their various states. At the other end lies complete creative freedom, which sounds ideal until you&#39;re paralysed by the range of possibilities. Consider standard colour picker interfaces: they offer a world of colour to explore but provide no map for navigation.&lt;/p&gt;&lt;p&gt;When I set out to design the latest version of this website, I knew selecting colours would be a challenge and that I could easily spend a lot of time fussing over choices. Rather than using Figma (or similar tools) for upfront design or relying on CSS frameworks with predefined colours, I wanted to take a different path. I&#39;m quite fond of Figma and recognise the usefulness of CSS frameworks in certain situations, but these approaches don&#39;t align with my &lt;a href=&quot;https://damianwalsh.co.uk/posts/cultivating-a-digital-garden/&quot;&gt;aims for this project&lt;/a&gt;—which involve moving away from production-line thinking and towards embracing the web&#39;s native languages as creative mediums and learning through experimentation. I also had a vague notion, inspired by Max Böck&#39;s theme picker, of offering users control of display colour within some sensible parameters—e.g., foreground and background combinations that meet &lt;a href=&quot;https://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast-contrast.html&quot;&gt;WCAG 2.0 AA minimum contrast ratio requirements&lt;/a&gt;.&lt;/p&gt;&lt;figure&gt;&lt;div class=&quot;screenshots&quot;&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/Ptk9H8fNfv-160.avif 160w, https://damianwalsh.co.uk/img/cache/Ptk9H8fNfv-320.avif 320w, https://damianwalsh.co.uk/img/cache/Ptk9H8fNfv-480.avif 480w, https://damianwalsh.co.uk/img/cache/Ptk9H8fNfv-640.avif 640w&quot; sizes=&quot;(min-width: 1700px) 443px, (min-width: 1380px) calc(43vw - 279px), (min-width: 780px) calc(41.03vw - 117px), 70.87vw&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/Ptk9H8fNfv-160.webp 160w, https://damianwalsh.co.uk/img/cache/Ptk9H8fNfv-320.webp 320w, https://damianwalsh.co.uk/img/cache/Ptk9H8fNfv-480.webp 480w, https://damianwalsh.co.uk/img/cache/Ptk9H8fNfv-640.webp 640w&quot; sizes=&quot;(min-width: 1700px) 443px, (min-width: 1380px) calc(43vw - 279px), (min-width: 780px) calc(41.03vw - 117px), 70.87vw&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://damianwalsh.co.uk/img/cache/Ptk9H8fNfv-160.png&quot; alt=&quot;Screenshot of Max Bock&#39;s homepage highlighting Classic theme&quot; width=&quot;640&quot; height=&quot;480&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/Ptk9H8fNfv-160.png 160w, https://damianwalsh.co.uk/img/cache/Ptk9H8fNfv-320.png 320w, https://damianwalsh.co.uk/img/cache/Ptk9H8fNfv-480.png 480w, https://damianwalsh.co.uk/img/cache/Ptk9H8fNfv-640.png 640w&quot; sizes=&quot;(min-width: 1700px) 443px, (min-width: 1380px) calc(43vw - 279px), (min-width: 780px) calc(41.03vw - 117px), 70.87vw&quot;&gt;&lt;/picture&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/VbCflZwYgf-160.avif 160w, https://damianwalsh.co.uk/img/cache/VbCflZwYgf-320.avif 320w, https://damianwalsh.co.uk/img/cache/VbCflZwYgf-480.avif 480w, https://damianwalsh.co.uk/img/cache/VbCflZwYgf-640.avif 640w&quot; sizes=&quot;(min-width: 1700px) 443px, (min-width: 1380px) calc(43vw - 279px), (min-width: 780px) calc(41.03vw - 117px), 70.87vw&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/VbCflZwYgf-160.webp 160w, https://damianwalsh.co.uk/img/cache/VbCflZwYgf-320.webp 320w, https://damianwalsh.co.uk/img/cache/VbCflZwYgf-480.webp 480w, https://damianwalsh.co.uk/img/cache/VbCflZwYgf-640.webp 640w&quot; sizes=&quot;(min-width: 1700px) 443px, (min-width: 1380px) calc(43vw - 279px), (min-width: 780px) calc(41.03vw - 117px), 70.87vw&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://damianwalsh.co.uk/img/cache/VbCflZwYgf-160.png&quot; alt=&quot;Screenshot of Max Bock&#39;s homepage highlighting Bowser&#39;s Castle theme&quot; width=&quot;640&quot; height=&quot;480&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/VbCflZwYgf-160.png 160w, https://damianwalsh.co.uk/img/cache/VbCflZwYgf-320.png 320w, https://damianwalsh.co.uk/img/cache/VbCflZwYgf-480.png 480w, https://damianwalsh.co.uk/img/cache/VbCflZwYgf-640.png 640w&quot; sizes=&quot;(min-width: 1700px) 443px, (min-width: 1380px) calc(43vw - 279px), (min-width: 780px) calc(41.03vw - 117px), 70.87vw&quot;&gt;&lt;/picture&gt;&lt;/div&gt;&lt;figcaption class=&quot;meta&quot;&gt;Theme picker on &lt;a href=&quot;https://mxb.dev/&quot;&gt;Max Böck&#39;s website&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;While I was thinking about my colour dilemma, I was reading Brian Eno&#39;s 1995 diary &lt;a href=&quot;https://damianwalsh.co.uk/reading-list/works/a-year-with-swollen-appendices-brian-eno.html&quot;&gt;A Year with Swollen Appendices&lt;/a&gt;, where he quotes cybernetician Stafford Beer while discussing his approach to producing generative music.&lt;/p&gt;&lt;figure&gt;&lt;blockquote&gt;&lt;p&gt;&quot;Instead of trying to specify it in full detail, specify it only somewhat. You can then ride on the dynamics of the system in the direction you want to go.&quot;&lt;/p&gt;&lt;/blockquote&gt;&lt;figcaption class=&quot;meta&quot;&gt;Stafford Beer&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;This freewheeling line of thought was appealing—who wouldn&#39;t want to set a few parameters and let the system flow? It influenced my approach to every aspect of presentation—layout, typography, sizing, spacing, and colour. For now though, I want to focus on colour and how systems thinking can be applied to generating colours using modern CSS features.&lt;/p&gt;&lt;h2 id=&quot;colour-theory&quot; tabindex=&quot;-1&quot;&gt;Colour theory&lt;/h2&gt;&lt;p&gt;The foundations of &lt;a href=&quot;https://en.wikipedia.org/wiki/Color_theory&quot;&gt;colour theory&lt;/a&gt; establish a framework for creating colours that complement each other in &lt;a href=&quot;https://en.wikipedia.org/wiki/Color_scheme&quot;&gt;harmony&lt;/a&gt;, serving as reliable parameters for systematically generating colours.&lt;/p&gt;&lt;div class=&quot;scheme-definitions&quot;&gt;&lt;dl&gt;&lt;dt&gt;Complementary&lt;/dt&gt;&lt;dd&gt;A complementary colour scheme consists of two colours positioned opposite each other on the &lt;a href=&quot;https://en.wikipedia.org/wiki/Color_wheel&quot;&gt;colour wheel&lt;/a&gt;. A &lt;em&gt;split-complementary&lt;/em&gt; scheme uses three colours: a base colour plus two colours that sit 150 and 210 degrees away from it.&lt;/dd&gt;&lt;dt&gt;Analogous&lt;/dt&gt;&lt;dd&gt;Analogous colour schemes use colours that are adjacent to each other on the colour wheel—typically a dominant primary or secondary colour with two complementary tertiary colours, positioned 30 degrees and 330 degrees from the base colour.&lt;/dd&gt;&lt;dt&gt;Triadic&lt;/dt&gt;&lt;dd&gt;The triadic colour scheme combines three colours: a base colour and two additional colours positioned 120 degrees and 240 degrees away from it on the colour wheel.&lt;/dd&gt;&lt;dt&gt;Tetradic&lt;/dt&gt;&lt;dd&gt;Tetradic schemes use four colours in two complementary pairs, with rectangle schemes using colours at 60, 180, and 240 degrees from the base colour, while square schemes space colours 90 degreed apart.&lt;/dd&gt;&lt;dt&gt;Hexadic&lt;/dt&gt;&lt;dd&gt;The hexadic colour scheme is a six-colour combination consisting of a base colour and five colours positioned at 60, 120, 180, 240, and 300 degrees from it on the colour wheel.&lt;/dd&gt;&lt;/dl&gt;&lt;/div&gt;&lt;h2 id=&quot;oklch-colour-notation&quot; tabindex=&quot;-1&quot;&gt;OKLCH colour notation&lt;/h2&gt;&lt;p&gt;I really like OKLCH notation for thinking about and declaring colours. For me, at least, it&#39;s far more intuitive than previous formats, and there are additional benefits outlined in &lt;a href=&quot;https://evilmartians.com/chronicles/oklch-in-css-why-quit-rgb-hsl&quot;&gt;OKLCH in CSS: why we moved from RGB and HSL&lt;/a&gt; by Andrey Sitnik at Evil Martians, which is an excellent primer on the topic.&lt;/p&gt;&lt;figure&gt;&lt;div class=&quot;screenshots&quot;&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/AXXYkv1bX9-160.avif 160w, https://damianwalsh.co.uk/img/cache/AXXYkv1bX9-320.avif 320w, https://damianwalsh.co.uk/img/cache/AXXYkv1bX9-480.avif 480w, https://damianwalsh.co.uk/img/cache/AXXYkv1bX9-640.avif 640w, https://damianwalsh.co.uk/img/cache/AXXYkv1bX9-960.avif 960w, https://damianwalsh.co.uk/img/cache/AXXYkv1bX9-1280.avif 1280w&quot; sizes=&quot;(min-width: 1700px) 907px, (min-width: 1380px) calc(85.67vw - 532px), (min-width: 780px) calc(82.59vw - 220px), 70.87vw&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/AXXYkv1bX9-160.webp 160w, https://damianwalsh.co.uk/img/cache/AXXYkv1bX9-320.webp 320w, https://damianwalsh.co.uk/img/cache/AXXYkv1bX9-480.webp 480w, https://damianwalsh.co.uk/img/cache/AXXYkv1bX9-640.webp 640w, https://damianwalsh.co.uk/img/cache/AXXYkv1bX9-960.webp 960w, https://damianwalsh.co.uk/img/cache/AXXYkv1bX9-1280.webp 1280w&quot; sizes=&quot;(min-width: 1700px) 907px, (min-width: 1380px) calc(85.67vw - 532px), (min-width: 780px) calc(82.59vw - 220px), 70.87vw&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://damianwalsh.co.uk/img/cache/AXXYkv1bX9-160.png&quot; alt=&quot;Diagram showing the axes of OKLCH colour space&quot; width=&quot;1280&quot; height=&quot;324&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/AXXYkv1bX9-160.png 160w, https://damianwalsh.co.uk/img/cache/AXXYkv1bX9-320.png 320w, https://damianwalsh.co.uk/img/cache/AXXYkv1bX9-480.png 480w, https://damianwalsh.co.uk/img/cache/AXXYkv1bX9-640.png 640w, https://damianwalsh.co.uk/img/cache/AXXYkv1bX9-960.png 960w, https://damianwalsh.co.uk/img/cache/AXXYkv1bX9-1280.png 1280w&quot; sizes=&quot;(min-width: 1700px) 907px, (min-width: 1380px) calc(85.67vw - 532px), (min-width: 780px) calc(82.59vw - 220px), 70.87vw&quot;&gt;&lt;/picture&gt;&lt;/div&gt;&lt;figcaption class=&quot;meta&quot;&gt;OKLCH axes&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;In oklch(L C H) or oklch(L C H / a), each item corresponds as follows:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;L&lt;/strong&gt; is perceived &lt;strong&gt;lightness&lt;/strong&gt; (0-100%). “Perceived” means that it has consistent lightness for our eyes. It ranges from &lt;strong&gt;0&lt;/strong&gt; (black) to &lt;strong&gt;1&lt;/strong&gt; (white).&lt;/li&gt;&lt;li&gt;&lt;strong&gt;C&lt;/strong&gt; is &lt;strong&gt;chroma&lt;/strong&gt;, the saturation of colour. It goes from &lt;strong&gt;0&lt;/strong&gt; (gray) to the most saturated colour. For both P3 and sRGB the value will be always below &lt;strong&gt;0.37&lt;/strong&gt;.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;H&lt;/strong&gt; is the &lt;strong&gt;hue&lt;/strong&gt; angle (0-360).&lt;/li&gt;&lt;li&gt;&lt;strong&gt;a&lt;/strong&gt; is &lt;strong&gt;opacity&lt;/strong&gt; (0-1 or 0-100%).&lt;/li&gt;&lt;/ul&gt;&lt;h2 id=&quot;css-custom-properties&quot; tabindex=&quot;-1&quot;&gt;CSS custom properties&lt;/h2&gt;&lt;p&gt;Custom properties (CSS variables) let you define reusable values. You can set them using either &lt;code&gt;@property&lt;/code&gt; or the more common &lt;code&gt;--property-name: value;&lt;/code&gt; syntax, and access them using &lt;code&gt;var()&lt;/code&gt;. A key feature of custom properties defined with two dashes (&lt;code&gt;--&lt;/code&gt;) is that they cascade and inherit values from parent elements. For a detailed explanation, see the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_cascading_variables/Using_CSS_custom_properties&quot;&gt;MDN documentation on CSS custom properties&lt;/a&gt;.&lt;/p&gt;&lt;h2 id=&quot;putting-theory-into-practice&quot; tabindex=&quot;-1&quot;&gt;Putting theory into practice&lt;/h2&gt;&lt;p&gt;Having established the foundations of using colour theory as basic parameters, then letting the system&#39;s dynamics flow, all that remains is to create a practical implementation using modern CSS that:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Produces four complementary colours (a tetradic scheme) offering room for interesting variations and combinations.&lt;/li&gt;&lt;li&gt;Generates &lt;a href=&quot;https://uxdesign.cc/how-to-create-a-color-ramp-used-in-design-systems-2edd5b93854c&quot;&gt;colour ramps&lt;/a&gt; for each hue, along with grayscale using corresponding lightness values.&lt;/li&gt;&lt;li&gt;Allows users to adjust the base hue while other colours automatically change according to their angular relationships, leveraging the cascade and inheritance of custom properties.&lt;/li&gt;&lt;/ul&gt;&lt;p class=&quot;codepen&quot; data-height=&quot;400&quot; data-default-tab=&quot;result&quot; data-slug-hash=&quot;pvojXYq&quot; data-pen-title=&quot;Dynamic colour palettes with OKLCH and CSS custom properties&quot; data-user=&quot;damianwalsh&quot; data-token=&quot;d56b2d955641ada1f87a0de51c12e687&quot; style=&quot;height:300px;box-sizing:border-box;display:flex;align-items:center;justify-content:center;border:2px solid;margin:1em 0;padding:1em&quot;&gt;&lt;span&gt;See the Pen &lt;a href=&quot;https://codepen.io/damianwalsh/pen/pvojXYq/d56b2d955641ada1f87a0de51c12e687&quot;&gt;Dynamic colour palettes with OKLCH and CSS custom properties&lt;/a&gt; by Damian Walsh (&lt;a href=&quot;https://codepen.io/damianwalsh&quot;&gt;@damianwalsh&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/span&gt;&lt;/p&gt;&lt;script async=&quot;&quot; src=&quot;https://public.codepenassets.com/embed/index.js&quot;&gt;&lt;/script&gt;&lt;p&gt;While vanilla CSS could achieve the same results, I built this system with SASS, which offers several advantages:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;SASS loops and variables reduce repetition and enable dynamic value generation, making the code easier to update and maintain.&lt;/li&gt;&lt;li&gt;Since most calculations happen during compilation, browsers have less work to do at runtime.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;During research, I found inspiration in Adam Argyle&#39;s &lt;a href=&quot;https://codepen.io/argyleink&quot;&gt;related explorations on CodePen&lt;/a&gt;, which helped inform my approach to implementation.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Cultivating a digital garden</title>
    <link href="https://damianwalsh.co.uk/posts/cultivating-a-digital-garden/" />
    <updated>2025-01-13T00:00:00Z</updated>
    <id>https://damianwalsh.co.uk/posts/cultivating-a-digital-garden/</id>
    <content type="html">&lt;p&gt;Last year was a weird one—in fact, it&#39;s more accurate to say the entire period since the COVID-19 pandemic has been a distinctly odd time. I can’t recall any time in my career—which spans long enough to include the dot-com crash of 2000 (yes, I&#39;m &lt;em&gt;that&lt;/em&gt; old) and the fallout from the financial crisis of 2007–2008—when workers have been stretched and squeezed so hard, for so long, in all directions.&lt;/p&gt;&lt;h2 id=&quot;a-burnt-out-case&quot; tabindex=&quot;-1&quot;&gt;A burnt-out case&lt;/h2&gt;&lt;p&gt;For me, this led to burnout and resulted in me walking away from a secure job in my chosen field—one I had invested significant time and effort building expertise in. At the time, I felt I had no choice. I barely understood what was happening myself, let alone be able to identify and articulate the root causes to an employer or advocate for change.&lt;/p&gt;&lt;figure&gt;&lt;blockquote&gt;&lt;p&gt;&quot;Burnout is a prolonged response to chronic emotional and interpersonal stressors on the job. It is defined by the three dimensions of exhaustion, cynicism, and professional inefficacy.&quot;&lt;/p&gt;&lt;/blockquote&gt;&lt;figcaption class=&quot;meta&quot;&gt;C. Maslach, M.P. Leiter in, &lt;a href=&quot;http://dx.doi.org/10.1016/B978-0-12-800951-2.00044-3&quot;&gt;Stress: Concepts, Cognition, Emotion, and Behavior&lt;/a&gt; (2016) pp.351-357&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Fortunately, I was in a position to support myself financially through a career break. I simply shut down and turned my attention elsewhere. During this time, one of the activities I found solace in was gardening (IRL)— foreshadowing my eventual path back to design.&lt;/p&gt;&lt;p&gt;Meanwhile, in the wider world there seemed to be a growing recognition and willingness to discuss the factors driving tech burnout. This &lt;a href=&quot;https://medium.com/@silvercross313/the-true-cause-of-tech-burnout-9e49842db613&quot;&gt;Medium article&lt;/a&gt;, written in 2024 from an engineer&#39;s perspective, hits the nail squarely on the head. I’ve paraphrased excerpts below in case the link becomes unavailable:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;People want autonomy and control over their work, driven by a desire to learn, develop, and contribute more meaningfully over time. They want to feel like they&#39;re building a real career.&lt;/li&gt;&lt;li&gt;Most tech work requires you to disregard your skills and training, and instead spend &lt;em&gt;less&lt;/em&gt; time creating &lt;em&gt;more&lt;/em&gt; things at &lt;em&gt;lower&lt;/em&gt; quality. Meanwhile, your knowledge grows increasingly outdated as technology evolves, and your job rarely provides opportunities to keep up-to-date with new developments.&lt;/li&gt;&lt;li&gt;Speed emerges from proficiency—it&#39;s not a goal to pursue directly. When you focus on building proficiency, speed follows; focusing on speed alone won&#39;t make you faster. The tech industry, with its emphasis on short-term gains and quick wins, fails to grasp this fundamental principle.&lt;/li&gt;&lt;li&gt;Burnout doesn&#39;t stem from intense work or long hours. It comes from trying to control outcomes that you have no control over. In the tech world, only a select few on the business and product side truly control outcomes—everyone else merely supports these individuals&#39; beliefs.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Don&#39;t get me wrong—I&#39;ve had positive experiences working in tech: challenging goals and engaging colleagues (and vice versa) who taught me a lot. Some challenges simply come with the territory, especially on large teams and projects with many moving parts. Collaborating with others inevitably requires compromise. For years, I not only accepted but thrived on all of this, including the frustrating parts. With the benefit of hindsight, though, I can now see how work situations similar to the ones described above and my own responses to them gradually wore down my enthusiasm and disconnected me from my sense of professional identity—with predictable consequences.&lt;/p&gt;&lt;h2 id=&quot;back-to-first-principles&quot; tabindex=&quot;-1&quot;&gt;Back to first principles&lt;/h2&gt;&lt;p&gt;Taking career breaks can be a fulfilling experience, but nothing lasts forever. After a certain point, time away from work begins to generate its own kind of stress and anxiety. Towards the end of 2024, events forced me to start thinking on a more practical level about what I wanted to do with my professional life and the steps I could take to move in that direction.&lt;/p&gt;&lt;figure&gt;&lt;blockquote&gt;&lt;p&gt;&quot;If you don&#39;t like something, change it. If you can&#39;t change it, change your attitude.&quot;&lt;/p&gt;&lt;/blockquote&gt;&lt;figcaption class=&quot;meta&quot;&gt;Maya Angelou&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;While more recent experiences revealed what I want to avoid—the factors leading to burnout broadly described above—I needed to reach further back to what initially drew me to design, and more specifically, design for the web, to reconnect with the type of work I find meaningful and engaging. This led me back to the web’s fundamental building blocks (HTML, CSS &amp;amp; JS)—not just as tools but as creative mediums—and to the community of makers who approach their craft with genuine curiosity, treating learning through experimentation as valuable in itself rather than just as a means to an end.&lt;/p&gt;&lt;h2 id=&quot;the-trouble-with-portfolio-websites&quot; tabindex=&quot;-1&quot;&gt;The trouble with portfolio websites&lt;/h2&gt;&lt;p&gt;Looking back at my website from 2023 left me disappointed. Both the content and presentation poorly reflected my own interests and motivations.&lt;/p&gt;&lt;figure&gt;&lt;div class=&quot;screenshots&quot;&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/TCb-zj6-pl-160.avif 160w, https://damianwalsh.co.uk/img/cache/TCb-zj6-pl-320.avif 320w, https://damianwalsh.co.uk/img/cache/TCb-zj6-pl-480.avif 480w, https://damianwalsh.co.uk/img/cache/TCb-zj6-pl-640.avif 640w&quot; sizes=&quot;(min-width: 1720px) 400px, (min-width: 1380px) calc(26.88vw - 57px), (min-width: 820px) calc(32.78vw - 48px), (min-width: 780px) 45vw, 70.87vw&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/TCb-zj6-pl-160.webp 160w, https://damianwalsh.co.uk/img/cache/TCb-zj6-pl-320.webp 320w, https://damianwalsh.co.uk/img/cache/TCb-zj6-pl-480.webp 480w, https://damianwalsh.co.uk/img/cache/TCb-zj6-pl-640.webp 640w&quot; sizes=&quot;(min-width: 1720px) 400px, (min-width: 1380px) calc(26.88vw - 57px), (min-width: 820px) calc(32.78vw - 48px), (min-width: 780px) 45vw, 70.87vw&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://damianwalsh.co.uk/img/cache/TCb-zj6-pl-160.png&quot; alt=&quot;Screenshot of homepage&quot; width=&quot;640&quot; height=&quot;455&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/TCb-zj6-pl-160.png 160w, https://damianwalsh.co.uk/img/cache/TCb-zj6-pl-320.png 320w, https://damianwalsh.co.uk/img/cache/TCb-zj6-pl-480.png 480w, https://damianwalsh.co.uk/img/cache/TCb-zj6-pl-640.png 640w&quot; sizes=&quot;(min-width: 1720px) 400px, (min-width: 1380px) calc(26.88vw - 57px), (min-width: 820px) calc(32.78vw - 48px), (min-width: 780px) 45vw, 70.87vw&quot;&gt;&lt;/picture&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/D1R0nwXa-F-160.avif 160w, https://damianwalsh.co.uk/img/cache/D1R0nwXa-F-320.avif 320w, https://damianwalsh.co.uk/img/cache/D1R0nwXa-F-480.avif 480w, https://damianwalsh.co.uk/img/cache/D1R0nwXa-F-640.avif 640w&quot; sizes=&quot;(min-width: 1720px) 400px, (min-width: 1380px) calc(26.88vw - 57px), (min-width: 820px) calc(32.78vw - 48px), (min-width: 780px) 45vw, 70.87vw&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/D1R0nwXa-F-160.webp 160w, https://damianwalsh.co.uk/img/cache/D1R0nwXa-F-320.webp 320w, https://damianwalsh.co.uk/img/cache/D1R0nwXa-F-480.webp 480w, https://damianwalsh.co.uk/img/cache/D1R0nwXa-F-640.webp 640w&quot; sizes=&quot;(min-width: 1720px) 400px, (min-width: 1380px) calc(26.88vw - 57px), (min-width: 820px) calc(32.78vw - 48px), (min-width: 780px) 45vw, 70.87vw&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://damianwalsh.co.uk/img/cache/D1R0nwXa-F-160.png&quot; alt=&quot;Screenshot of case study template&quot; width=&quot;640&quot; height=&quot;455&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/D1R0nwXa-F-160.png 160w, https://damianwalsh.co.uk/img/cache/D1R0nwXa-F-320.png 320w, https://damianwalsh.co.uk/img/cache/D1R0nwXa-F-480.png 480w, https://damianwalsh.co.uk/img/cache/D1R0nwXa-F-640.png 640w&quot; sizes=&quot;(min-width: 1720px) 400px, (min-width: 1380px) calc(26.88vw - 57px), (min-width: 820px) calc(32.78vw - 48px), (min-width: 780px) 45vw, 70.87vw&quot;&gt;&lt;/picture&gt;&lt;/div&gt;&lt;figcaption class=&quot;meta&quot;&gt;Personal website circa 2023&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3 id=&quot;content&quot; tabindex=&quot;-1&quot;&gt;Content&lt;/h3&gt;&lt;p&gt;Case studies force you to look backward, reviewing past work instead of focusing on future growth. There&#39;s nothing fundamentally wrong with this type of exercise—I&#39;m doing it right now. Looking back over the ground you&#39;ve already covered can help you decide where you want to go next. The problem emerges when you apply the concept to real-world work examples.&lt;/p&gt;&lt;p&gt;Tech projects are typically carried out by regimented teams where work flows continuously like parts on a factory assembly line. Companies organise themselves this way believing it enables parallel work streams, faster delivery, and the flexibility to rotate specialists in, around, and back out as though through a revolving door. They may well be right about this but after you&#39;ve been working this way for a while, you realise the work product is often incompatible with both your own growth needs and these same companies&#39; hiring criteria, which are based on assessing attitude (how you think) and competence (what you do). These qualities are hard to showcase when you find yourself spread wafer-thin and/or pigeonholed with little say over your work, methods, or time management.&lt;/p&gt;&lt;p&gt;Most work contracts assign intellectual property (IP) rights to clients or employers and bind you to non-disclosure agreements—either in perpetuity or for such lengthy periods that they might as well be. When sharing is permitted, you&#39;ll likely sanitise your portfolio, portraying the work in the most flattering light possible to avoid offending anyone you’ve worked with. Meanwhile, &amp;quot;the business&amp;quot; will expect you to reduce the often messy trial and error process of creative work into formulas like: &lt;em&gt;Accomplished [X] as measured by [Y], by doing [Z]&lt;/em&gt;.&lt;/p&gt;&lt;h3 id=&quot;presentation&quot; tabindex=&quot;-1&quot;&gt;Presentation&lt;/h3&gt;&lt;p&gt;While the case study format forces you to cast your gaze back with rose-tinted glasses, the standard organisation and presentation of content offers limited scope to explore beyond generic layout and flow patterns. For me, at least, these preconceived notions inevitably lead to two outcomes when designing a portfolio website: either cookie-cutter sites (like the previous version of this website, quickly assembled with Tailwind and plugins) or JS frameworks that are ill-suited for the task and encourage you down the path to smoke and mirrors.&lt;/p&gt;&lt;p&gt;Even when you set out with the best intentions, portfolio websites provide little motivation for ongoing development. The content inherently focuses on the past, while the standard presentation limits opportunities to explore creative possibilities and develop your craft. And there&#39;s the lingering doubt that presenting yourself this way risks perpetuating the same type of work and methods you&#39;re trying to move beyond.&lt;/p&gt;&lt;p&gt;When you feel constrained by both the work itself and the way you talk about and present it, what avenues remain open for personal expression and growth?&lt;/p&gt;&lt;h2 id=&quot;digital-gardens&quot; tabindex=&quot;-1&quot;&gt;Digital gardens&lt;/h2&gt;&lt;p&gt;Digital gardens seem to offer an alternative path. But what exactly is a digital garden? How can these spaces provide a different model for personal expression and growth? And how does this relate to burnout?&lt;/p&gt;&lt;h3 id=&quot;surveying-the-landscape&quot; tabindex=&quot;-1&quot;&gt;Surveying the landscape&lt;/h3&gt;&lt;p&gt;Digital gardens are typically described as a personalised way of thinking, organising, and sharing, often serving as a means of escaping the orthodoxy of conventional social media or blogging platforms that place limits on content organisation and presentation. Maggie Appleton’s 2021 essay does a great job of tracing the history and describing the characteristics of digital gardens, while acknowledging that they are defined as much by their differences as their similarities.&lt;/p&gt;&lt;figure&gt;&lt;blockquote&gt;&lt;p&gt;&quot;Digital gardens should be just as unique and particular as their vegetative counterparts. The point of a garden is that it’s a personal playspace. You organise the garden around the ideas and mediums that match your way of thinking, rather than off someone else’s standardised template.&quot;&lt;/p&gt;&lt;/blockquote&gt;&lt;figcaption class=&quot;meta&quot;&gt;Maggie Appleton. &lt;a href=&quot;https://maggieappleton.com/garden-history&quot;&gt;A Brief History &amp; Ethos of the Digital Garden&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;While all the themes covered in the essay and its references resonated, this particular quote stood out by offering a liberating alternative vision—one that contrasts with the portfolio model that often reflects the work environment instead of the individual. This shift in thinking was revelatory for me but is by no means revolutionary. A quick search reveals makers whose websites exemplify this approach.&lt;/p&gt;&lt;div class=&quot;screenshots&quot;&gt;&lt;figure&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/RhY_Ttii1F-160.avif 160w, https://damianwalsh.co.uk/img/cache/RhY_Ttii1F-320.avif 320w, https://damianwalsh.co.uk/img/cache/RhY_Ttii1F-480.avif 480w, https://damianwalsh.co.uk/img/cache/RhY_Ttii1F-640.avif 640w&quot; sizes=&quot;(min-width: 1600px) 242px, (min-width: 1380px) calc(10.5vw + 80px), (min-width: 1260px) 19vw, (min-width: 820px) calc(6.43vw + 155px), (min-width: 780px) 30vw, 70.87vw&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/RhY_Ttii1F-160.webp 160w, https://damianwalsh.co.uk/img/cache/RhY_Ttii1F-320.webp 320w, https://damianwalsh.co.uk/img/cache/RhY_Ttii1F-480.webp 480w, https://damianwalsh.co.uk/img/cache/RhY_Ttii1F-640.webp 640w&quot; sizes=&quot;(min-width: 1600px) 242px, (min-width: 1380px) calc(10.5vw + 80px), (min-width: 1260px) 19vw, (min-width: 820px) calc(6.43vw + 155px), (min-width: 780px) 30vw, 70.87vw&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://damianwalsh.co.uk/img/cache/RhY_Ttii1F-160.png&quot; alt=&quot;Screenshot of Maggie Appleton&#39;s homepage&quot; width=&quot;640&quot; height=&quot;455&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/RhY_Ttii1F-160.png 160w, https://damianwalsh.co.uk/img/cache/RhY_Ttii1F-320.png 320w, https://damianwalsh.co.uk/img/cache/RhY_Ttii1F-480.png 480w, https://damianwalsh.co.uk/img/cache/RhY_Ttii1F-640.png 640w&quot; sizes=&quot;(min-width: 1600px) 242px, (min-width: 1380px) calc(10.5vw + 80px), (min-width: 1260px) 19vw, (min-width: 820px) calc(6.43vw + 155px), (min-width: 780px) 30vw, 70.87vw&quot;&gt;&lt;/picture&gt;&lt;figcaption class=&quot;meta&quot;&gt;&lt;a href=&quot;https://maggieappleton.com&quot;&gt;Maggie Appleton&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;figure&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/u7XEdfnZ0P-160.avif 160w, https://damianwalsh.co.uk/img/cache/u7XEdfnZ0P-320.avif 320w, https://damianwalsh.co.uk/img/cache/u7XEdfnZ0P-480.avif 480w, https://damianwalsh.co.uk/img/cache/u7XEdfnZ0P-640.avif 640w&quot; sizes=&quot;(min-width: 1600px) 242px, (min-width: 1380px) calc(10.5vw + 80px), (min-width: 1260px) 19vw, (min-width: 820px) calc(6.43vw + 155px), (min-width: 780px) 30vw, 70.87vw&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/u7XEdfnZ0P-160.webp 160w, https://damianwalsh.co.uk/img/cache/u7XEdfnZ0P-320.webp 320w, https://damianwalsh.co.uk/img/cache/u7XEdfnZ0P-480.webp 480w, https://damianwalsh.co.uk/img/cache/u7XEdfnZ0P-640.webp 640w&quot; sizes=&quot;(min-width: 1600px) 242px, (min-width: 1380px) calc(10.5vw + 80px), (min-width: 1260px) 19vw, (min-width: 820px) calc(6.43vw + 155px), (min-width: 780px) 30vw, 70.87vw&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://damianwalsh.co.uk/img/cache/u7XEdfnZ0P-160.png&quot; alt=&quot;Screenshot of Adam Argyle&#39;s homepage&quot; width=&quot;640&quot; height=&quot;455&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/u7XEdfnZ0P-160.png 160w, https://damianwalsh.co.uk/img/cache/u7XEdfnZ0P-320.png 320w, https://damianwalsh.co.uk/img/cache/u7XEdfnZ0P-480.png 480w, https://damianwalsh.co.uk/img/cache/u7XEdfnZ0P-640.png 640w&quot; sizes=&quot;(min-width: 1600px) 242px, (min-width: 1380px) calc(10.5vw + 80px), (min-width: 1260px) 19vw, (min-width: 820px) calc(6.43vw + 155px), (min-width: 780px) 30vw, 70.87vw&quot;&gt;&lt;/picture&gt;&lt;figcaption class=&quot;meta&quot;&gt;&lt;a href=&quot;https://nerdy.dev&quot;&gt;Adam Argyle&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;figure&gt;&lt;picture&gt;&lt;source type=&quot;image/avif&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/vkzjrJ8w5U-160.avif 160w, https://damianwalsh.co.uk/img/cache/vkzjrJ8w5U-320.avif 320w, https://damianwalsh.co.uk/img/cache/vkzjrJ8w5U-480.avif 480w, https://damianwalsh.co.uk/img/cache/vkzjrJ8w5U-640.avif 640w&quot; sizes=&quot;(min-width: 1600px) 242px, (min-width: 1380px) calc(10.5vw + 80px), (min-width: 1260px) 19vw, (min-width: 820px) calc(6.43vw + 155px), (min-width: 780px) 30vw, 70.87vw&quot;&gt;&lt;source type=&quot;image/webp&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/vkzjrJ8w5U-160.webp 160w, https://damianwalsh.co.uk/img/cache/vkzjrJ8w5U-320.webp 320w, https://damianwalsh.co.uk/img/cache/vkzjrJ8w5U-480.webp 480w, https://damianwalsh.co.uk/img/cache/vkzjrJ8w5U-640.webp 640w&quot; sizes=&quot;(min-width: 1600px) 242px, (min-width: 1380px) calc(10.5vw + 80px), (min-width: 1260px) 19vw, (min-width: 820px) calc(6.43vw + 155px), (min-width: 780px) 30vw, 70.87vw&quot;&gt;&lt;img loading=&quot;lazy&quot; decoding=&quot;async&quot; src=&quot;https://damianwalsh.co.uk/img/cache/vkzjrJ8w5U-160.png&quot; alt=&quot;Screenshot of Cory Dransfeldt&#39;s homepage&quot; width=&quot;640&quot; height=&quot;455&quot; srcset=&quot;https://damianwalsh.co.uk/img/cache/vkzjrJ8w5U-160.png 160w, https://damianwalsh.co.uk/img/cache/vkzjrJ8w5U-320.png 320w, https://damianwalsh.co.uk/img/cache/vkzjrJ8w5U-480.png 480w, https://damianwalsh.co.uk/img/cache/vkzjrJ8w5U-640.png 640w&quot; sizes=&quot;(min-width: 1600px) 242px, (min-width: 1380px) calc(10.5vw + 80px), (min-width: 1260px) 19vw, (min-width: 820px) calc(6.43vw + 155px), (min-width: 780px) 30vw, 70.87vw&quot;&gt;&lt;/picture&gt;&lt;figcaption class=&quot;meta&quot;&gt;&lt;a href=&quot;https://coryd.dev&quot;&gt;Cory Dransfeldt&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;/div&gt;&lt;p&gt;Each adopts different aspects of the same philosophy yet achieves distinct results shaped by their individual interests and motivations. So what are my own motivations for choosing this particular path?&lt;/p&gt;&lt;h3 id=&quot;planting-new-seeds&quot; tabindex=&quot;-1&quot;&gt;Planting new seeds&lt;/h3&gt;&lt;p&gt;Burnout is a peculiar thing—the causes build imperceptibly over time, but the effects loom suddenly and seemingly out of nowhere, knocking you off balance and turning your life upside down. Given time, the exhaustion and cynicism dimensions of burnout—feeling drained of energy and idealism—fade away. While gardening (IRL) helps restore a sense of personal agency, burnout&#39;s most enduring and difficult effect to recover from is loss of self-belief. This digital garden project aims to address that by sweeping aside the factors that lead to burnout and returning to first principles, focusing on what &lt;em&gt;I believe in&lt;/em&gt; and &lt;em&gt;can control:&lt;/em&gt; having ideas and seeing them through from concept to completion, using the web&#39;s native languages as creative mediums, learning through experimentation, prioritising craftsmanship over speed, and presenting a more authentic professional identity based on my own interests and motivations. Its essential nature is perhaps best captured by the gardener&#39;s adage:&lt;/p&gt;&lt;figure&gt;&lt;blockquote&gt;&lt;p&gt;&quot;Look after your garden and your garden will look after you.&quot;&lt;/p&gt;&lt;/blockquote&gt;&lt;figcaption class=&quot;meta&quot;&gt;Traditional saying&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;I&#39;m not sure what the future holds. While I remain optimistic about the web platform and community, the current direction the tech industry seems to be moving in, along with the job market and my place within it, looks uncertain. But that&#39;s OK—I&#39;ve planted some seeds, and for now I&#39;m content being a digital gardener.&lt;/p&gt;</content>
  </entry>
</feed>