/**
 * VARIABLES
 * @link https://utopia.fyi/grid/calculator?c=326,18,1.2,1364,22,1.25,5,2,&s=0.75|0.5|0.25,1.5|2|3|4|6,s-l&g=xs,l,xl,12

 * @link https://utopia.fyi/type/calculator?c=326,18,1.2,1364,22,1.25,7,2,&s=0.75|0.5|0.25,1.5|2|3|4|6,s-l&g=xs,l,xl,12

 * @link https://utopia.fyi/space/calculator?c=326,18,1.2,1364,22,1.25,7,2,&s=0.75|0.5|0.25,1.5|2|3|4|6,s-l|xs-l|xs-m&g=xs,l,xl,12
 */

@use "sass:list";

:root {
  /* Font families */
  --font-default: system-ui, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, Noto Sans, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji;
  --font-display: Bricolage Grotesque Variable, var(--font-default);

  /* Font sizes */
  --text-size--2: clamp(0.7813rem, 0.7502rem + 0.1522vw, 0.88rem);
  --text-size--1: clamp(0.9375rem, 0.8865rem + 0.2505vw, 1.1rem);
  --text-size-0: clamp(1.125rem, 1.0465rem + 0.3854vw, 1.375rem);
  --text-size-1: clamp(1.35rem, 1.2342rem + 0.5684vw, 1.7188rem);
  --text-size-2: clamp(1.62rem, 1.454rem + 0.8145vw, 2.1484rem);
  --text-size-3: clamp(1.944rem, 1.7111rem + 1.143vw, 2.6855rem);
  --text-size-4: clamp(2.3328rem, 2.0112rem + 1.5786vw, 3.3569rem);
  --text-size-5: clamp(2.7994rem, 2.3607rem + 2.1531vw, 4.1962rem);
  --text-size-6: clamp(3.3592rem, 2.7669rem + 2.9071vw, 5.2452rem);
  --text-size-7: clamp(4.0311rem, 3.2379rem + 3.8928vw, 6.5565rem);

  /* Spacing */
  --space-3xs: clamp(0.3125rem, 0.2929rem + 0.0963vw, 0.375rem);
  --space-2xs: clamp(0.5625rem, 0.5232rem + 0.1927vw, 0.6875rem);
  --space-xs: clamp(0.875rem, 0.8161rem + 0.289vw, 1.0625rem);
  --space-s: clamp(1.125rem, 1.0465rem + 0.3854vw, 1.375rem);
  --space-m: clamp(1.6875rem, 1.5697rem + 0.578vw, 2.0625rem);
  --space-l: clamp(2.25rem, 2.093rem + 0.7707vw, 2.75rem);
  --space-xl: clamp(3.375rem, 3.1395rem + 1.1561vw, 4.125rem);
  --space-2xl: clamp(4.5rem, 4.1859rem + 1.5414vw, 5.5rem);
  --space-3xl: clamp(6.75rem, 6.2789rem + 2.3121vw, 8.25rem);

  --space-3xs-2xs: clamp(0.3125rem, 0.1947rem + 0.578vw, 0.6875rem);
  --space-2xs-xs: clamp(0.5625rem, 0.4055rem + 0.7707vw, 1.0625rem);
  --space-xs-s: clamp(0.875rem, 0.718rem + 0.7707vw, 1.375rem);
  --space-s-m: clamp(1.125rem, 0.8306rem + 1.4451vw, 2.0625rem);
  --space-m-l: clamp(1.6875rem, 1.3538rem + 1.6378vw, 2.75rem);
  --space-l-xl: clamp(2.25rem, 1.6611rem + 2.8902vw, 4.125rem);
  --space-xl-2xl: clamp(3.375rem, 2.7076rem + 3.2755vw, 5.5rem);
  --space-2xl-3xl: clamp(4.5rem, 3.3223rem + 5.7803vw, 8.25rem);

  --space-s-l: clamp(1.125rem, 0.6146rem + 2.5048vw, 2.75rem);
  --space-xs-l: clamp(0.875rem, 0.2861rem + 2.8902vw, 2.75rem);
  --space-xs-m: clamp(0.875rem, 0.502rem + 1.8304vw, 2.0625rem);

  /* Wrapper */
  --wrapper-max-width: 85.25rem;
  --gutter: var(--space-xs-l, clamp(0.875rem, 0.2861rem + 2.8902vw, 2.75rem));
  --flow-space: var(--space-xs-s);

  /* Border radii */
  --border-radius: 8px;
  --border-radius-s: calc(var(--border-radius) / 2);
  --border-radius-l: calc(var(--border-radius) * 2);

  /* Colours */

  // Base values
  $lightness-step: 10.75%;
  $chroma-step: 0.025;
  $hue: 180;

  // Generate scales
  $lightness-scale: ();
  $chroma-scale: ();

  @for $i from 1 through 9 {
    $lightness-scale: list.append($lightness-scale, $lightness-step * $i);
    $chroma-scale: list.append($chroma-scale, $chroma-step * $i);
  }

  // Base variables
  --lightness: 0;
  --lightness-step: #{$lightness-step};
  --chroma: 0.25;
  --chroma-step: #{$chroma-step};
  --hue: #{$hue};

  // Generate lightness steps
  @for $i from 1 through 9 {
    @if $i == 1 {
      --lightness-#{$i}: var(--lightness-step);
    } @else {
      --lightness-#{$i}: calc(var(--lightness-#{$i - 1}) + var(--lightness-step));
    }
  }

  // Generate chroma steps
  @for $i from 1 through 9 {
    @if $i == 1 {
      --chroma-#{$i}: var(--chroma-step);
    } @else {
      --chroma-#{$i}: calc(var(--chroma-#{$i - 1}) + var(--chroma-step));
    }
  }

  // Generate hue steps
  --hue-1: var(--hue);
  --hue-2: calc(var(--hue) + 60);
  --hue-3: calc(var(--hue) + 180);
  --hue-4: calc(var(--hue) + 240);

  // Generate color variables
  @for $i from 1 through 9 {
    $index: 10 - $i;
    $lightness: list.nth($lightness-scale, $index);
    $chroma: list.nth($chroma-scale, $i);

    --primary-#{$i}: oklch(#{$lightness} #{$chroma} var(--hue));
    --secondary-#{$i}: oklch(#{$lightness} #{$chroma} calc(var(--hue) + 60));
    --tertiary-#{$i}: oklch(#{$lightness} #{$chroma} calc(var(--hue) + 180));
    --quaternary-#{$i}: oklch(#{$lightness} #{$chroma} calc(var(--hue) + 240));
    --greyscale-#{$i}: oklch(#{$lightness} 0 0);
  }

  --white: #fff;
}

@media screen {
  [data-theme=light] {
    --surface-back: var(--greyscale-1);
    --surface-mid: var(--greyscale-2);
    --surface-fore: var(--white);

    --text-colour-1: var(--greyscale-9);
    --text-colour-2: var(--greyscale-5);
    --text-colour-3: var(--greyscale-3);
  }

  [data-theme=dark] {
    --surface-back: var(--greyscale-9);
    --surface-mid: var(--greyscale-7);
    --surface-fore: var(--greyscale-8);

    --text-colour-1: var(--greyscale-1);
    --text-colour-2: var(--greyscale-4);
    --text-colour-3: var(--greyscale-6);
  }
}
